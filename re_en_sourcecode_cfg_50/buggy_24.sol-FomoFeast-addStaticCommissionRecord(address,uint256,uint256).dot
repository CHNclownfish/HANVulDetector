digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
records = staticCommissionRecordMapping[userAddress]

IRs:
REF_102(FomoFeast.CommissionRecord[9]) -> staticCommissionRecordMapping[userAddress]
records(FomoFeast.CommissionRecord[9]) := REF_102(FomoFeast.CommissionRecord[9])"];
1->4;
2[label="Node Type: BEGIN_LOOP 2
"];
2->5;
3[label="Node Type: END_LOOP 3
"];
3->9;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
i = 8

IRs:
i(uint256) := 8(uint256)"];
4->2;
5[label="Node Type: IF_LOOP 5

EXPRESSION:
i > 0

IRs:
TMP_162(bool) = i > 0
CONDITION TMP_162"];
5->6[label="True"];
5->3[label="False"];
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
prevRecord = records[i - 1]

IRs:
TMP_163(uint256) = i - 1
REF_103(FomoFeast.CommissionRecord) -> records[TMP_163]
prevRecord(FomoFeast.CommissionRecord) := REF_103(FomoFeast.CommissionRecord)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
records[i] = prevRecord

IRs:
REF_104(FomoFeast.CommissionRecord) -> records[i]
REF_104 (->records) := prevRecord(FomoFeast.CommissionRecord)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
-- i

IRs:
i(uint256) = i - 1"];
8->5;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
records[0] = CommissionRecord(time,amount)

IRs:
REF_105(FomoFeast.CommissionRecord) -> records[0]
TMP_164 = new CommissionRecord(time,amount)
REF_105 (->records) := TMP_164(FomoFeast.CommissionRecord)"];
}
