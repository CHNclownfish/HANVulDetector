digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
user.currentInvestAmount == 0

IRs:
REF_78(uint256) -> user.currentInvestAmount
TMP_145(bool) = REF_78 == 0
CONDITION TMP_145"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
amount = 0

IRs:
amount(uint256) := 0(uint256)"];
2->10;
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
commissionDays = now.sub(user.currentInvestTime).div(ONE_DAY)

IRs:
REF_80(uint256) -> user.currentInvestTime
TMP_146(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['now', 'REF_80'] 
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_146', 'ONE_DAY'] 
commissionDays(uint256) := TMP_147(uint256)"];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
commissionDays > user.currentInvestCycle

IRs:
REF_82(uint256) -> user.currentInvestCycle
TMP_148(bool) = commissionDays > REF_82
CONDITION TMP_148"];
4->5[label="True"];
4->6[label="False"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
commissionDays = user.currentInvestCycle

IRs:
REF_83(uint256) -> user.currentInvestCycle
commissionDays(uint256) := REF_83(uint256)"];
5->6;
6[label="Node Type: END_IF 6
"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
amount = user.currentInvestAmount.mul(user.currentStaticCommissionRatio).mul(commissionDays)

IRs:
REF_84(uint256) -> user.currentInvestAmount
REF_86(uint256) -> user.currentStaticCommissionRatio
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['REF_84', 'REF_86'] 
TMP_150(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_149', 'commissionDays'] 
amount(uint256) := TMP_150(uint256)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
amount = amount.div(1000)

IRs:
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['amount', '1000'] 
amount(uint256) := TMP_151(uint256)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
amount = amount.sub(user.currentStaticCommissionWithdrawAmount)

IRs:
REF_90(uint256) -> user.currentStaticCommissionWithdrawAmount
TMP_152(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['amount', 'REF_90'] 
amount(uint256) := TMP_152(uint256)"];
9->10;
10[label="Node Type: END_IF 10
"];
}
