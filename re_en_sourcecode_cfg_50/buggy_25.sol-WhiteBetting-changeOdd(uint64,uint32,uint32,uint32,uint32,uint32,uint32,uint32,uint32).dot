digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->10;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
gameList[_fixtureId].odd_homeTeam = _odd_homeTeam

IRs:
REF_35(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_36(uint32) -> REF_35.odd_homeTeam
REF_36 (->gameList) := _odd_homeTeam(uint32)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
gameList[_fixtureId].odd_drawTeam = _odd_drawTeam

IRs:
REF_37(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_38(uint32) -> REF_37.odd_drawTeam
REF_38 (->gameList) := _odd_drawTeam(uint32)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
gameList[_fixtureId].odd_awayTeam = _odd_awayTeam

IRs:
REF_39(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_40(uint32) -> REF_39.odd_awayTeam
REF_40 (->gameList) := _odd_awayTeam(uint32)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
gameList[_fixtureId].odd_over = _odd_over

IRs:
REF_41(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_42(uint32) -> REF_41.odd_over
REF_42 (->gameList) := _odd_over(uint32)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
gameList[_fixtureId].odd_under = _odd_under

IRs:
REF_43(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_44(uint32) -> REF_43.odd_under
REF_44 (->gameList) := _odd_under(uint32)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw

IRs:
REF_45(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_46(uint32) -> REF_45.odd_homeTeamAndDraw
REF_46 (->gameList) := _odd_homeTeamAndDraw(uint32)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam

IRs:
REF_47(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_48(uint32) -> REF_47.odd_homeAndAwayTeam
REF_48 (->gameList) := _odd_homeAndAwayTeam(uint32)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw

IRs:
REF_49(WhiteBetting.GameInfo) -> gameList[_fixtureId]
REF_50(uint32) -> REF_49.odd_awayTeamAndDraw
REF_50 (->gameList) := _odd_awayTeamAndDraw(uint32)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
ChangeOdd(_fixtureId,_odd_homeTeam,_odd_drawTeam,_odd_awayTeam,_odd_over,_odd_under,_odd_homeTeamAndDraw,_odd_homeAndAwayTeam,_odd_awayTeamAndDraw)

IRs:
Emit ChangeOdd(_fixtureId._odd_homeTeam._odd_drawTeam._odd_awayTeam._odd_over._odd_under._odd_homeTeamAndDraw._odd_homeAndAwayTeam._odd_awayTeamAndDraw)"];
10[label="Node Type: EXPRESSION 10

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, WhiteBetting.onlyOwner()()"];
10->1;
}
