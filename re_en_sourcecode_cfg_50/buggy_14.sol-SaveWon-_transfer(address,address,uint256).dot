digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(to != address(0))

IRs:
TMP_192 = CONVERT 0 to address
TMP_193(bool) = to != TMP_192
TMP_194(None) = SOLIDITY_CALL require(bool)(TMP_193)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_balances[from] = _balances[from].sub(value)

IRs:
REF_142(uint256) -> _balances[from]
REF_143(uint256) -> _balances[from]
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_143', 'value'] 
REF_142 (->_balances) := TMP_195(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_balances[to] = _balances[to].add(value)

IRs:
REF_145(uint256) -> _balances[to]
REF_146(uint256) -> _balances[to]
TMP_196(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_146', 'value'] 
REF_145 (->_balances) := TMP_196(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
Transfer(from,to,value)

IRs:
Emit Transfer(from.to.value)"];
}
