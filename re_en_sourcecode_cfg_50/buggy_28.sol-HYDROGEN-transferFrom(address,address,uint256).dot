digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(value <= _balances[from])

IRs:
REF_103(uint256) -> _balances[from]
TMP_140(bool) = value <= REF_103
TMP_141(None) = SOLIDITY_CALL require(bool)(TMP_140)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(value <= _allowed[from][msg.sender])

IRs:
REF_104(mapping(address => uint256)) -> _allowed[from]
REF_105(uint256) -> REF_104[msg.sender]
TMP_142(bool) = value <= REF_105
TMP_143(None) = SOLIDITY_CALL require(bool)(TMP_142)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(to != address(0))

IRs:
TMP_144 = CONVERT 0 to address
TMP_145(bool) = to != TMP_144
TMP_146(None) = SOLIDITY_CALL require(bool)(TMP_145)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
_balances[from] = _balances[from].sub(value)

IRs:
REF_106(uint256) -> _balances[from]
REF_107(uint256) -> _balances[from]
TMP_147(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_107', 'value'] 
REF_106 (->_balances) := TMP_147(uint256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
tokensToBurn = findtwoPercent(value)

IRs:
TMP_148(uint256) = INTERNAL_CALL, HYDROGEN.findtwoPercent(uint256)(value)
tokensToBurn(uint256) := TMP_148(uint256)"];
5->6;
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
tokensToTransfer = value.sub(tokensToBurn)

IRs:
TMP_149(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['value', 'tokensToBurn'] 
tokensToTransfer(uint256) := TMP_149(uint256)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
_balances[to] = _balances[to].add(tokensToTransfer)

IRs:
REF_110(uint256) -> _balances[to]
REF_111(uint256) -> _balances[to]
TMP_150(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_111', 'tokensToTransfer'] 
REF_110 (->_balances) := TMP_150(uint256)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
_totalSupply = _totalSupply.sub(tokensToBurn)

IRs:
TMP_151(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalSupply', 'tokensToBurn'] 
_totalSupply(uint256) := TMP_151(uint256)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
_allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value)

IRs:
REF_114(mapping(address => uint256)) -> _allowed[from]
REF_115(uint256) -> REF_114[msg.sender]
REF_116(mapping(address => uint256)) -> _allowed[from]
REF_117(uint256) -> REF_116[msg.sender]
TMP_152(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_117', 'value'] 
REF_115 (->_allowed) := TMP_152(uint256)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
Transfer(from,to,tokensToTransfer)

IRs:
Emit Transfer(from.to.tokensToTransfer)"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
Transfer(from,address(0),tokensToBurn)

IRs:
TMP_154 = CONVERT 0 to address
Emit Transfer(from.TMP_154.tokensToBurn)"];
11->12;
12[label="Node Type: RETURN 12

EXPRESSION:
true

IRs:
RETURN True"];
}
