digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
assert(b > 0)

IRs:
TMP_33(bool) = b > 0
INTERNAL_CALL, SafeMath.assert(bool)(TMP_33)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
c = a / b

IRs:
TMP_35(uint256) = a / b
c(uint256) := TMP_35(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
assert(a == b * c + a % b)

IRs:
TMP_36(uint256) = b * c
TMP_37(uint256) = a % b
TMP_38(uint256) = TMP_36 + TMP_37
TMP_39(bool) = a == TMP_38
INTERNAL_CALL, SafeMath.assert(bool)(TMP_39)"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
c

IRs:
RETURN c"];
}
