digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
_reward > 0

IRs:
TMP_335(bool) = _reward > 0
CONDITION TMP_335"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
tokenEscrowMarketplace.requestTokenPayment(_requester,_attester,_reward,_requestNonce,_requesterSig)

IRs:
HIGH_LEVEL_CALL, dest:tokenEscrowMarketplace(TokenEscrowMarketplace), function:requestTokenPayment, arguments:['_requester', '_attester', '_reward', '_requestNonce', '_requesterSig']  "];
2->3;
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
AttestationRejected(_attester,_requester)

IRs:
Emit AttestationRejected(_attester._requester)"];
}
