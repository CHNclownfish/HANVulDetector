digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->15;
1[label="Node Type: IF 1

EXPRESSION:
! isCreated(_symbol)

IRs:
TMP_193(bool) = INTERNAL_CALL, EToken2.isCreated(bytes32)(_symbol)
TMP_194 = ! TMP_193 
CONDITION TMP_194"];
1->2[label="True"];
1->4[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_error(Asset is not issued)

IRs:
INTERNAL_CALL, EToken2._error(bytes32)(Asset is not issued)"];
2->3;
3[label="Node Type: RETURN 3

EXPRESSION:
false

IRs:
RETURN False"];
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: IF 5

EXPRESSION:
_senderId == _spenderId

IRs:
TMP_196(bool) = _senderId == _spenderId
CONDITION TMP_196"];
5->6[label="True"];
5->8[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
_error(Cannot approve to oneself)

IRs:
INTERNAL_CALL, EToken2._error(bytes32)(Cannot approve to oneself)"];
6->7;
7[label="Node Type: RETURN 7

EXPRESSION:
false

IRs:
RETURN False"];
8[label="Node Type: END_IF 8
"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
assets[_symbol].wallets[_senderId].allowance[_spenderId] = _value

IRs:
REF_130(EToken2.Asset) -> assets[_symbol]
REF_131(mapping(uint256 => EToken2.Wallet)) -> REF_130.wallets
REF_132(EToken2.Wallet) -> REF_131[_senderId]
REF_133(mapping(uint256 => uint256)) -> REF_132.allowance
REF_134(uint256) -> REF_133[_spenderId]
REF_134 (->assets) := _value(uint256)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
eventsHistory.emitApprove(_address(_senderId),_address(_spenderId),_symbol,_value)

IRs:
TMP_198(address) = INTERNAL_CALL, EToken2._address(uint256)(_senderId)
TMP_199(address) = INTERNAL_CALL, EToken2._address(uint256)(_spenderId)
HIGH_LEVEL_CALL, dest:eventsHistory(Emitter), function:emitApprove, arguments:['TMP_198', 'TMP_199', '_symbol', '_value']  "];
10->11;
11[label="Node Type: IF 11

EXPRESSION:
proxies[_symbol] != 0x0

IRs:
REF_136(address) -> proxies[_symbol]
TMP_201(bool) = REF_136 != 0
CONDITION TMP_201"];
11->12[label="True"];
11->13[label="False"];
12[label="Node Type: EXPRESSION 12

EXPRESSION:
Proxy(proxies[_symbol]).emitApprove(_address(_senderId),_address(_spenderId),_value)

IRs:
REF_137(address) -> proxies[_symbol]
TMP_202 = CONVERT REF_137 to Proxy
TMP_203(address) = INTERNAL_CALL, EToken2._address(uint256)(_senderId)
TMP_204(address) = INTERNAL_CALL, EToken2._address(uint256)(_spenderId)
HIGH_LEVEL_CALL, dest:TMP_202(Proxy), function:emitApprove, arguments:['TMP_203', 'TMP_204', '_value']  "];
12->13;
13[label="Node Type: END_IF 13
"];
13->14;
14[label="Node Type: RETURN 14

EXPRESSION:
true

IRs:
RETURN True"];
15[label="Node Type: EXPRESSION 15

EXPRESSION:
checkEnabledSwitch(sha3()(_symbol,Features.Allowances))

IRs:
REF_139(EToken2.Features) -> Features.Allowances
TMP_206(bytes32) = SOLIDITY_CALL sha3()(_symbol,REF_139)
MODIFIER_CALL, EToken2.checkEnabledSwitch(bytes32)(TMP_206)"];
15->16;
16[label="Node Type: EXPRESSION 16

EXPRESSION:
checkSigned(_senderId,1)

IRs:
MODIFIER_CALL, EToken2.checkSigned(uint256,uint256)(_senderId,1)"];
16->1;
}
