digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(orderInfo.orderStatus == uint8(OrderStatus.FILLABLE),ORDER_UNFILLABLE)

IRs:
REF_707(uint8) -> orderInfo.orderStatus
REF_708(LibOrder.OrderStatus) -> OrderStatus.FILLABLE
TMP_996 = CONVERT REF_708 to uint8
TMP_997(bool) = REF_707 == TMP_996
TMP_998(None) = SOLIDITY_CALL require(bool,string)(TMP_997,ORDER_UNFILLABLE)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
order.senderAddress != address(0)

IRs:
REF_709(address) -> order.senderAddress
TMP_999 = CONVERT 0 to address
TMP_1000(bool) = REF_709 != TMP_999
CONDITION TMP_1000"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool,string)(order.senderAddress == msg.sender,INVALID_SENDER)

IRs:
REF_710(address) -> order.senderAddress
TMP_1001(bool) = REF_710 == msg.sender
TMP_1002(None) = SOLIDITY_CALL require(bool,string)(TMP_1001,INVALID_SENDER)"];
3->4;
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: IF 5

EXPRESSION:
order.takerAddress != address(0)

IRs:
REF_711(address) -> order.takerAddress
TMP_1003 = CONVERT 0 to address
TMP_1004(bool) = REF_711 != TMP_1003
CONDITION TMP_1004"];
5->6[label="True"];
5->7[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
require(bool,string)(order.takerAddress == takerAddress,INVALID_TAKER)

IRs:
REF_712(address) -> order.takerAddress
TMP_1005(bool) = REF_712 == takerAddress
TMP_1006(None) = SOLIDITY_CALL require(bool,string)(TMP_1005,INVALID_TAKER)"];
6->7;
7[label="Node Type: END_IF 7
"];
7->8;
8[label="Node Type: IF 8

EXPRESSION:
orderInfo.orderTakerAssetFilledAmount == 0

IRs:
REF_713(uint256) -> orderInfo.orderTakerAssetFilledAmount
TMP_1007(bool) = REF_713 == 0
CONDITION TMP_1007"];
8->9[label="True"];
8->10[label="False"];
9[label="Node Type: EXPRESSION 9

EXPRESSION:
require(bool,string)(isValidSignature(orderInfo.orderHash,order.makerAddress,signature),INVALID_ORDER_SIGNATURE)

IRs:
REF_714(bytes32) -> orderInfo.orderHash
REF_715(address) -> order.makerAddress
TMP_1008(bool) = INTERNAL_CALL, MixinSignatureValidator.isValidSignature(bytes32,address,bytes)(REF_714,REF_715,signature)
TMP_1009(None) = SOLIDITY_CALL require(bool,string)(TMP_1008,INVALID_ORDER_SIGNATURE)"];
9->10;
10[label="Node Type: END_IF 10
"];
}
