digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->3;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
allowed[teamAllocation][msg.sender] = allowance(teamAllocation,msg.sender)

IRs:
REF_90(mapping(address => uint256)) -> allowed[teamAllocation]
REF_91(uint256) -> REF_90[msg.sender]
TMP_169(uint256) = INTERNAL_CALL, NexoToken.allowance(address,address)(teamAllocation,msg.sender)
REF_91 (->allowed) := TMP_169(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(transferFrom(teamAllocation,_to,_amountWithDecimals))

IRs:
TMP_170(bool) = INTERNAL_CALL, StandardToken.transferFrom(address,address,uint256)(teamAllocation,_to,_amountWithDecimals)
TMP_171(None) = SOLIDITY_CALL require(bool)(TMP_170)"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
3->1;
}
