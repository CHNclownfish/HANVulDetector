digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
balanceOf[target] += mintedAmount

IRs:
REF_57(uint256) -> balanceOf[target]
REF_57(-> balanceOf) = REF_57 + mintedAmount"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
totalSupply += mintedAmount

IRs:
totalSupply(uint256) = totalSupply + mintedAmount"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Transfer(0,this,mintedAmount)

IRs:
Emit Transfer(0.this.mintedAmount)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
Transfer(this,target,mintedAmount)

IRs:
Emit Transfer(this.target.mintedAmount)"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, owned.onlyOwner()()"];
5->1;
}
