digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
_signatureDigest = generateLockupTokensDelegationSchemaHash(_sender,_amount,_nonce)

IRs:
TMP_192(bytes32) = INTERNAL_CALL, SigningLogic.generateLockupTokensDelegationSchemaHash(address,uint256,bytes32)(_sender,_amount,_nonce)
_signatureDigest(bytes32) := TMP_192(bytes32)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(_sender == recoverSigner(_signatureDigest,_delegationSig),Invalid LockupTokens Signature)

IRs:
TMP_193(address) = INTERNAL_CALL, SigningLogic.recoverSigner(bytes32,bytes)(_signatureDigest,_delegationSig)
TMP_194(bool) = _sender == TMP_193
TMP_195(None) = SOLIDITY_CALL require(bool,string)(TMP_194,Invalid LockupTokens Signature)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
burnSignatureDigest(_signatureDigest,_sender)

IRs:
INTERNAL_CALL, SigningLogic.burnSignatureDigest(bytes32,address)(_signatureDigest,_sender)"];
}
