digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
validateAttestForSig(_subject,_attester,_requester,_reward,_dataHash,_requestNonce,_delegationSig)

IRs:
INTERNAL_CALL, AttestationLogic.validateAttestForSig(address,address,address,uint256,bytes32,bytes32,bytes)(_subject,_attester,_requester,_reward,_dataHash,_requestNonce,_delegationSig)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
attestForUser(_subject,_attester,_requester,_reward,_requesterSig,_dataHash,_requestNonce,_subjectSig)

IRs:
INTERNAL_CALL, AttestationLogic.attestForUser(address,address,address,uint256,bytes,bytes32,bytes32,bytes)(_subject,_attester,_requester,_reward,_requesterSig,_dataHash,_requestNonce,_subjectSig)"];
}
