digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->3;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
allowed[advisersAllocation][msg.sender] = allowance(advisersAllocation,msg.sender)

IRs:
REF_94(mapping(address => uint256)) -> allowed[advisersAllocation]
REF_95(uint256) -> REF_94[msg.sender]
TMP_177(uint256) = INTERNAL_CALL, NexoToken.allowance(address,address)(advisersAllocation,msg.sender)
REF_95 (->allowed) := TMP_177(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(transferFrom(advisersAllocation,_to,_amountWithDecimals))

IRs:
TMP_178(bool) = INTERNAL_CALL, StandardToken.transferFrom(address,address,uint256)(advisersAllocation,_to,_amountWithDecimals)
TMP_179(None) = SOLIDITY_CALL require(bool)(TMP_178)"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
3->1;
}
