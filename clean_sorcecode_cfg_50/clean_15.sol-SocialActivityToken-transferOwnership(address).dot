digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
balances[newOwner] = balances[newOwner].add(balances[owner])

IRs:
REF_90(uint256) -> balances[newOwner]
REF_91(uint256) -> balances[newOwner]
REF_93(uint256) -> balances[owner]
TMP_226(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_91', 'REF_93'] 
REF_90 (->balances) := TMP_226(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
balances[owner] = 0

IRs:
REF_94(uint256) -> balances[owner]
REF_94 (->balances) := 0(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
owner = newOwner

IRs:
owner(address) := newOwner(address)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, SocialActivityToken.onlyOwner()()"];
4->1;
}
