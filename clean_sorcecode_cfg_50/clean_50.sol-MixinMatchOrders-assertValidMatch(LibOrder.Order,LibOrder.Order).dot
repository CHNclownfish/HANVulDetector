digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(safeMul(leftOrder.makerAssetAmount,rightOrder.makerAssetAmount) >= safeMul(leftOrder.takerAssetAmount,rightOrder.takerAssetAmount),NEGATIVE_SPREAD_REQUIRED)

IRs:
REF_306(uint256) -> leftOrder.makerAssetAmount
REF_307(uint256) -> rightOrder.makerAssetAmount
TMP_671(uint256) = INTERNAL_CALL, SafeMath.safeMul(uint256,uint256)(REF_306,REF_307)
REF_308(uint256) -> leftOrder.takerAssetAmount
REF_309(uint256) -> rightOrder.takerAssetAmount
TMP_672(uint256) = INTERNAL_CALL, SafeMath.safeMul(uint256,uint256)(REF_308,REF_309)
TMP_673(bool) = TMP_671 >= TMP_672
TMP_674(None) = SOLIDITY_CALL require(bool,string)(TMP_673,NEGATIVE_SPREAD_REQUIRED)"];
}
