digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.value >= VOLUME_20_REF_7

IRs:
TMP_244(bool) = msg.value >= VOLUME_20_REF_7
CONDITION TMP_244"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
tokens.mul(20).div(100)

IRs:
TMP_245(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', '20'] 
TMP_246(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_245', '100'] 
RETURN TMP_246"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
msg.value >= VOLUME_15_REF_6

IRs:
TMP_247(bool) = msg.value >= VOLUME_15_REF_6
CONDITION TMP_247"];
4->5[label="True"];
4->6[label="False"];
5[label="Node Type: RETURN 5

EXPRESSION:
tokens.mul(15).div(100)

IRs:
TMP_248(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', '15'] 
TMP_249(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_248', '100'] 
RETURN TMP_249"];
6[label="Node Type: END_IF 6
"];
6->7;
7[label="Node Type: IF 7

EXPRESSION:
msg.value >= VOLUME_12d5_REF_5d5

IRs:
TMP_250(bool) = msg.value >= VOLUME_12d5_REF_5d5
CONDITION TMP_250"];
7->8[label="True"];
7->9[label="False"];
8[label="Node Type: RETURN 8

EXPRESSION:
tokens.mul(125).div(1000)

IRs:
TMP_251(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', '125'] 
TMP_252(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_251', '1000'] 
RETURN TMP_252"];
9[label="Node Type: END_IF 9
"];
9->10;
10[label="Node Type: IF 10

EXPRESSION:
msg.value >= VOLUME_10_REF_5

IRs:
TMP_253(bool) = msg.value >= VOLUME_10_REF_5
CONDITION TMP_253"];
10->11[label="True"];
10->12[label="False"];
11[label="Node Type: RETURN 11

EXPRESSION:
tokens.mul(10).div(100)

IRs:
TMP_254(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', '10'] 
TMP_255(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_254', '100'] 
RETURN TMP_255"];
12[label="Node Type: END_IF 12
"];
12->13;
13[label="Node Type: IF 13

EXPRESSION:
msg.value >= VOLUME_7_REF_4

IRs:
TMP_256(bool) = msg.value >= VOLUME_7_REF_4
CONDITION TMP_256"];
13->14[label="True"];
13->15[label="False"];
14[label="Node Type: RETURN 14

EXPRESSION:
tokens.mul(7).div(100)

IRs:
TMP_257(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', '7'] 
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_257', '100'] 
RETURN TMP_258"];
15[label="Node Type: END_IF 15
"];
15->16;
16[label="Node Type: IF 16

EXPRESSION:
msg.value >= VOLUME_5_REF_3

IRs:
TMP_259(bool) = msg.value >= VOLUME_5_REF_3
CONDITION TMP_259"];
16->17[label="True"];
16->18[label="False"];
17[label="Node Type: RETURN 17

EXPRESSION:
tokens.mul(5).div(100)

IRs:
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['tokens', '5'] 
TMP_261(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_260', '100'] 
RETURN TMP_261"];
18[label="Node Type: END_IF 18
"];
18->19;
19[label="Node Type: RETURN 19

EXPRESSION:
0

IRs:
RETURN 0"];
}
