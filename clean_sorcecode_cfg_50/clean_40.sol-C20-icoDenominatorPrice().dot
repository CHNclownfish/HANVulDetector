digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
icoDuration = safeSub(block.number,fundingStartBlock)

IRs:
TMP_191(uint256) = INTERNAL_CALL, SafeMath.safeSub(uint256,uint256)(block.number,fundingStartBlock)
icoDuration(uint256) := TMP_191(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2
"];
2->3;
3[label="Node Type: IF 3

EXPRESSION:
icoDuration < 2880

IRs:
TMP_192(bool) = icoDuration < 2880
CONDITION TMP_192"];
3->4[label="True"];
3->5[label="False"];
4[label="Node Type: RETURN 4

EXPRESSION:
currentPrice.denominator

IRs:
REF_74(uint256) -> currentPrice.denominator
RETURN REF_74"];
5[label="Node Type: IF 5

EXPRESSION:
icoDuration < 80640

IRs:
TMP_193(bool) = icoDuration < 80640
CONDITION TMP_193"];
5->6[label="True"];
5->8[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
denominator = safeMul(currentPrice.denominator,105) / 100

IRs:
REF_75(uint256) -> currentPrice.denominator
TMP_194(uint256) = INTERNAL_CALL, SafeMath.safeMul(uint256,uint256)(REF_75,105)
TMP_195(uint256) = TMP_194 / 100
denominator(uint256) := TMP_195(uint256)"];
6->7;
7[label="Node Type: RETURN 7

EXPRESSION:
denominator

IRs:
RETURN denominator"];
8[label="Node Type: EXPRESSION 8

EXPRESSION:
denominator = safeMul(currentPrice.denominator,110) / 100

IRs:
REF_76(uint256) -> currentPrice.denominator
TMP_196(uint256) = INTERNAL_CALL, SafeMath.safeMul(uint256,uint256)(REF_76,110)
TMP_197(uint256) = TMP_196 / 100
denominator(uint256) := TMP_197(uint256)"];
8->9;
9[label="Node Type: RETURN 9

EXPRESSION:
denominator

IRs:
RETURN denominator"];
}
