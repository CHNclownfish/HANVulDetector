digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(softCapReached)

IRs:
TMP_239(None) = SOLIDITY_CALL require(bool)(softCapReached)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
beneficiary.transfer(collected)

IRs:
Transfer dest:beneficiary value:collected"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
token.transfer(beneficiary,token.balanceOf(this))

IRs:
TMP_241(uint256) = HIGH_LEVEL_CALL, dest:token(StarCoin), function:balanceOf, arguments:['this']  
TMP_242(bool) = HIGH_LEVEL_CALL, dest:token(StarCoin), function:transfer, arguments:['beneficiary', 'TMP_241']  "];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
crowdsaleFinished = true

IRs:
crowdsaleFinished(bool) := True(bool)"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()"];
5->1;
}
