digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(takerAssetFillAmount != 0,INVALID_TAKER_AMOUNT)

IRs:
TMP_332(bool) = takerAssetFillAmount != 0
TMP_333(None) = SOLIDITY_CALL require(bool,string)(TMP_332,INVALID_TAKER_AMOUNT)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(takerAssetFilledAmount <= takerAssetFillAmount,TAKER_OVERPAY)

IRs:
TMP_334(bool) = takerAssetFilledAmount <= takerAssetFillAmount
TMP_335(None) = SOLIDITY_CALL require(bool,string)(TMP_334,TAKER_OVERPAY)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool,string)(safeAdd(orderInfo.orderTakerAssetFilledAmount,takerAssetFilledAmount) <= order.takerAssetAmount,ORDER_OVERFILL)

IRs:
REF_126(uint256) -> orderInfo.orderTakerAssetFilledAmount
TMP_336(uint256) = INTERNAL_CALL, SafeMath.safeAdd(uint256,uint256)(REF_126,takerAssetFilledAmount)
REF_127(uint256) -> order.takerAssetAmount
TMP_337(bool) = TMP_336 <= REF_127
TMP_338(None) = SOLIDITY_CALL require(bool,string)(TMP_337,ORDER_OVERFILL)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool,string)(safeMul(makerAssetFilledAmount,order.takerAssetAmount) <= safeMul(order.makerAssetAmount,takerAssetFilledAmount),INVALID_FILL_PRICE)

IRs:
REF_128(uint256) -> order.takerAssetAmount
TMP_339(uint256) = INTERNAL_CALL, SafeMath.safeMul(uint256,uint256)(makerAssetFilledAmount,REF_128)
REF_129(uint256) -> order.makerAssetAmount
TMP_340(uint256) = INTERNAL_CALL, SafeMath.safeMul(uint256,uint256)(REF_129,takerAssetFilledAmount)
TMP_341(bool) = TMP_339 <= TMP_340
TMP_342(None) = SOLIDITY_CALL require(bool,string)(TMP_341,INVALID_FILL_PRICE)"];
}
