digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(b.length >= index + 4,GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED)

IRs:
REF_16 -> LENGTH b
TMP_46(uint256) = index + 4
TMP_47(bool) = REF_16 >= TMP_46
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
index += 32

IRs:
index(uint256) = index + 32"];
2->3;
3[label="Node Type: INLINE ASM 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
result

IRs:
RETURN result"];
}
