digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
_golemFactory == 0

IRs:
TMP_0(bool) = _golemFactory == 0
CONDITION TMP_0"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
_migrationMaster == 0

IRs:
TMP_1(bool) = _migrationMaster == 0
CONDITION TMP_1"];
4->5[label="True"];
4->6[label="False"];
5[label="Node Type: THROW 5
"];
6[label="Node Type: END_IF 6
"];
6->7;
7[label="Node Type: IF 7

EXPRESSION:
_fundingStartBlock <= block.number

IRs:
TMP_2(bool) = _fundingStartBlock <= block.number
CONDITION TMP_2"];
7->8[label="True"];
7->9[label="False"];
8[label="Node Type: THROW 8
"];
9[label="Node Type: END_IF 9
"];
9->10;
10[label="Node Type: IF 10

EXPRESSION:
_fundingEndBlock <= _fundingStartBlock

IRs:
TMP_3(bool) = _fundingEndBlock <= _fundingStartBlock
CONDITION TMP_3"];
10->11[label="True"];
10->12[label="False"];
11[label="Node Type: THROW 11
"];
12[label="Node Type: END_IF 12
"];
12->13;
13[label="Node Type: EXPRESSION 13

EXPRESSION:
lockedAllocation = new GNTAllocation(_golemFactory)

IRs:
TMP_5 = new GNTAllocation(_golemFactory) 
lockedAllocation(GNTAllocation) := TMP_5(GNTAllocation)"];
13->14;
14[label="Node Type: EXPRESSION 14

EXPRESSION:
migrationMaster = _migrationMaster

IRs:
migrationMaster(address) := _migrationMaster(address)"];
14->15;
15[label="Node Type: EXPRESSION 15

EXPRESSION:
golemFactory = _golemFactory

IRs:
golemFactory(address) := _golemFactory(address)"];
15->16;
16[label="Node Type: EXPRESSION 16

EXPRESSION:
fundingStartBlock = _fundingStartBlock

IRs:
fundingStartBlock(uint256) := _fundingStartBlock(uint256)"];
16->17;
17[label="Node Type: EXPRESSION 17

EXPRESSION:
fundingEndBlock = _fundingEndBlock

IRs:
fundingEndBlock(uint256) := _fundingEndBlock(uint256)"];
}
