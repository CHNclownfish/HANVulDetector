digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
nestedBytesLength = readUint256(b,index)

IRs:
TMP_49(uint256) = INTERNAL_CALL, LibBytes.readUint256(bytes,uint256)(b,index)
nestedBytesLength(uint256) := TMP_49(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
index += 32

IRs:
index(uint256) = index + 32"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool,string)(b.length >= index + nestedBytesLength,GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED)

IRs:
REF_17 -> LENGTH b
TMP_50(uint256) = index + nestedBytesLength
TMP_51(bool) = REF_17 >= TMP_50
TMP_52(None) = SOLIDITY_CALL require(bool,string)(TMP_51,GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED)"];
3->4;
4[label="Node Type: INLINE ASM 4
"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
result

IRs:
RETURN result"];
}
