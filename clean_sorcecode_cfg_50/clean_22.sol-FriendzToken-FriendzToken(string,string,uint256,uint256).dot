digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(_decimals > 0)

IRs:
TMP_77(bool) = _decimals > 0
TMP_78(None) = SOLIDITY_CALL require(bool)(TMP_77)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(_supply > 0)

IRs:
TMP_79(bool) = _supply > 0
TMP_80(None) = SOLIDITY_CALL require(bool)(TMP_79)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
name = _name

IRs:
name(string) := _name(string)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
symbol = _symbol

IRs:
symbol(string) := _symbol(string)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
decimals = _decimals

IRs:
decimals(uint256) := _decimals(uint256)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
totalSupply = _supply

IRs:
totalSupply(uint256) := _supply(uint256)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
balances[owner] = _supply

IRs:
REF_32(uint256) -> balances[owner]
REF_32 (->balances) := _supply(uint256)"];
}
