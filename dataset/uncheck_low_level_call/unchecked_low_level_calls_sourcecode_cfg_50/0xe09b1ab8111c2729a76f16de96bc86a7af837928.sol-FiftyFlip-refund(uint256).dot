digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
bet = bets[ticketID]

IRs:
REF_29(FiftyFlip.Bet) -> bets[ticketID]
bet(FiftyFlip.Bet) := REF_29(FiftyFlip.Bet)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(bet.amount != 0,this ticket has no balance)

IRs:
REF_30(uint256) -> bet.amount
TMP_71(bool) = REF_30 != 0
TMP_72(None) = SOLIDITY_CALL require(bool,string)(TMP_71,this ticket has no balance)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool,string)(block.number > bet.blockNumber + BET_EXPIRATION_BLOCKS,this ticket is expired.)

IRs:
REF_31(uint256) -> bet.blockNumber
TMP_73(uint256) = REF_31 + BET_EXPIRATION_BLOCKS
TMP_74(bool) = block.number > TMP_73
TMP_75(None) = SOLIDITY_CALL require(bool,string)(TMP_74,this ticket is expired.)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
sendRefund(ticketID)

IRs:
INTERNAL_CALL, FiftyFlip.sendRefund(uint256)(ticketID)"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
checkContractHealth()

IRs:
MODIFIER_CALL, FiftyFlip.checkContractHealth()()"];
5->1;
}
