digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
_secondsPassed >= _duration

IRs:
TMP_698(bool) = _secondsPassed >= _duration
CONDITION TMP_698"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
_endingPrice

IRs:
RETURN _endingPrice"];
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
totalPriceChange = int256(_endingPrice) - int256(_startingPrice)

IRs:
TMP_699 = CONVERT _endingPrice to int256
TMP_700 = CONVERT _startingPrice to int256
TMP_701(int256) = TMP_699 - TMP_700
totalPriceChange(int256) := TMP_701(int256)"];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
currentPriceChange = totalPriceChange * int256(_secondsPassed) / int256(_duration)

IRs:
TMP_702 = CONVERT _secondsPassed to int256
TMP_703(int256) = totalPriceChange * TMP_702
TMP_704 = CONVERT _duration to int256
TMP_705(int256) = TMP_703 / TMP_704
currentPriceChange(int256) := TMP_705(int256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
currentPrice = int256(_startingPrice) + currentPriceChange

IRs:
TMP_706 = CONVERT _startingPrice to int256
TMP_707(int256) = TMP_706 + currentPriceChange
currentPrice(int256) := TMP_707(int256)"];
5->6;
6[label="Node Type: RETURN 6

EXPRESSION:
uint256(currentPrice)

IRs:
TMP_708 = CONVERT currentPrice to uint256
RETURN TMP_708"];
}
