digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
auction = tokenIdToAuction[_tokenId]

IRs:
REF_220(ClockAuctionBase.Auction) -> tokenIdToAuction[_tokenId]
auction(ClockAuctionBase.Auction) := REF_220(ClockAuctionBase.Auction)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(_isOnAuction(auction))

IRs:
TMP_814(bool) = INTERNAL_CALL, ClockAuctionBase._isOnAuction(ClockAuctionBase.Auction)(auction)
TMP_815(None) = SOLIDITY_CALL require(bool)(TMP_814)"];
2->3;
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
seller = auction.seller

IRs:
REF_221(address) -> auction.seller
seller(address) := REF_221(address)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool)(msg.sender == seller)

IRs:
TMP_816(bool) = msg.sender == seller
TMP_817(None) = SOLIDITY_CALL require(bool)(TMP_816)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
_cancelAuction(_tokenId,seller)

IRs:
INTERNAL_CALL, ClockAuctionBase._cancelAuction(uint256,address)(_tokenId,seller)"];
}
