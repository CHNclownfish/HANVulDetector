digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->6;
1[label="Node Type: IF 1

EXPRESSION:
msg.value > 0

IRs:
TMP_29(bool) = msg.value > 0
CONDITION TMP_29"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
owner.transfer(this.balance)

IRs:
REF_14 -> BALANCE this
Transfer dest:owner value:REF_14"];
2->3;
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
messages.push(Message(now,nameFrom,text,url,msg.value))

IRs:
TMP_31 = new Message(now,nameFrom,text,url,msg.value)
REF_16 -> LENGTH messages
TMP_33(uint256) := REF_16(uint256)
TMP_34(uint256) = TMP_33 + 1
REF_16 (->messages) := TMP_34(uint256)
REF_17(Marriage.Message) -> messages[TMP_33]
REF_17 (->messages) := TMP_31(Marriage.Message)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
MessageSent(nameFrom,text,url,msg.value)

IRs:
Emit MessageSent(nameFrom.text.url.msg.value)"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
areMarried()

IRs:
MODIFIER_CALL, Marriage.areMarried()()"];
6->1;
}
