digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->8;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
balance = this.balance

IRs:
REF_2 -> BALANCE this
balance(uint256) := REF_2(uint256)"];
2->3;
3[label="Node Type: IF 3

EXPRESSION:
_amount > 0

IRs:
TMP_17(bool) = _amount > 0
CONDITION TMP_17"];
3->4[label="True"];
3->5[label="False"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
balance = _amount

IRs:
balance(uint256) := _amount(uint256)"];
4->5;
5[label="Node Type: END_IF 5
"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
owner.send(balance)

IRs:
TMP_18 = SEND dest:owner value:balance"];
6->7;
7[label="Node Type: RETURN 7

EXPRESSION:
true

IRs:
RETURN True"];
8[label="Node Type: EXPRESSION 8

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Delta.onlyOwner()()"];
8->1;
}
