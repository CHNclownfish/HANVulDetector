digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: IF 1

EXPRESSION:
Holders[_to] > 0

IRs:
REF_3(uint256) -> Holders[_to]
TMP_18(bool) = REF_3 > 0
CONDITION TMP_18"];
1->2[label="True"];
1->4[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
Holders[_to] = 0

IRs:
REF_4(uint256) -> Holders[_to]
REF_4 (->Holders) := 0(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
WithdrawToken(_token,_amount,_to)

IRs:
INTERNAL_CALL, Token.WithdrawToken(address,uint256,address)(_token,_amount,_to)"];
3->4;
4[label="Node Type: END_IF 4
"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()"];
5->1;
}
