digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->7;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(devFeeSize >= withdrawAmount,You are trying to withdraw more amount than developer fee.)

IRs:
TMP_89(bool) = devFeeSize >= withdrawAmount
TMP_90(None) = SOLIDITY_CALL require(bool,string)(TMP_89,You are trying to withdraw more amount than developer fee.)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(withdrawAmount <= address(this).balance,Contract balance is lower than withdrawAmount)

IRs:
TMP_91 = CONVERT this to address
REF_34 -> BALANCE TMP_91
TMP_92(bool) = withdrawAmount <= REF_34
TMP_93(None) = SOLIDITY_CALL require(bool,string)(TMP_92,Contract balance is lower than withdrawAmount)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool,string)(devFeeSize <= address(this).balance,Not enough funds to withdraw.)

IRs:
TMP_94 = CONVERT this to address
REF_35 -> BALANCE TMP_94
TMP_95(bool) = devFeeSize <= REF_35
TMP_96(None) = SOLIDITY_CALL require(bool,string)(TMP_95,Not enough funds to withdraw.)"];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
sendFunds(autoPlayBot,withdrawAmount)

IRs:
TMP_97(bool) = INTERNAL_CALL, FiftyFlip.sendFunds(address,uint256)(autoPlayBot,withdrawAmount)
CONDITION TMP_97"];
4->5[label="True"];
4->6[label="False"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
devFeeSize -= withdrawAmount

IRs:
devFeeSize(uint256) = devFeeSize - withdrawAmount"];
5->6;
6[label="Node Type: END_IF 6
"];
7[label="Node Type: EXPRESSION 7

EXPRESSION:
onlyBot()

IRs:
MODIFIER_CALL, FiftyFlip.onlyBot()()"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
checkContractHealth()

IRs:
MODIFIER_CALL, FiftyFlip.checkContractHealth()()"];
8->1;
}
