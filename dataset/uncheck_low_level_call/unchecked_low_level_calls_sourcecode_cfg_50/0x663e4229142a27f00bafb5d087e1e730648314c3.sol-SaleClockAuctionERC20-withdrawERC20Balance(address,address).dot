digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(balances[_erc20Address] > 0)

IRs:
REF_362(uint256) -> balances[_erc20Address]
TMP_1316(bool) = REF_362 > 0
TMP_1317(None) = SOLIDITY_CALL require(bool)(TMP_1316)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(msg.sender == address(nonFungibleContract))

IRs:
TMP_1318 = CONVERT nonFungibleContract to address
TMP_1319(bool) = msg.sender == TMP_1318
TMP_1320(None) = SOLIDITY_CALL require(bool)(TMP_1319)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
ERC20(_erc20Address).transfer(_to,balances[_erc20Address])

IRs:
TMP_1321 = CONVERT _erc20Address to ERC20
REF_364(uint256) -> balances[_erc20Address]
TMP_1322(bool) = HIGH_LEVEL_CALL, dest:TMP_1321(ERC20), function:transfer, arguments:['_to', 'REF_364']  "];
}
