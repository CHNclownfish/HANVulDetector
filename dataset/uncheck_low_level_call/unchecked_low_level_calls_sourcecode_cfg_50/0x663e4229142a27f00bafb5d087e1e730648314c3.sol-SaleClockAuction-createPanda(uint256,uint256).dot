digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.sender == address(nonFungibleContract))

IRs:
TMP_1127 = CONVERT nonFungibleContract to address
TMP_1128(bool) = msg.sender == TMP_1127
TMP_1129(None) = SOLIDITY_CALL require(bool)(TMP_1128)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
_type == 0

IRs:
TMP_1130(bool) = _type == 0
CONDITION TMP_1130"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
CommonPanda.push(_tokenId)

IRs:
REF_303 -> LENGTH CommonPanda
TMP_1132(uint256) := REF_303(uint256)
TMP_1133(uint256) = TMP_1132 + 1
REF_303 (->CommonPanda) := TMP_1133(uint256)
REF_304(uint256) -> CommonPanda[TMP_1132]
REF_304 (->CommonPanda) := _tokenId(uint256)"];
3->5;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
RarePanda.push(_tokenId)

IRs:
REF_306 -> LENGTH RarePanda
TMP_1135(uint256) := REF_306(uint256)
TMP_1136(uint256) = TMP_1135 + 1
REF_306 (->RarePanda) := TMP_1136(uint256)
REF_307(uint256) -> RarePanda[TMP_1135]
REF_307 (->RarePanda) := _tokenId(uint256)"];
4->5;
5[label="Node Type: END_IF 5
"];
}
