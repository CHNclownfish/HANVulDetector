digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->6;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.value >= 10000000000000000)

IRs:
TMP_7(bool) = msg.value >= 10000000000000000
TMP_8(None) = SOLIDITY_CALL require(bool)(TMP_7)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
msg.sender != owner || unlockSecret()

IRs:
TMP_9(bool) = msg.sender != owner
TMP_10(bool) = INTERNAL_CALL, DrainMe.unlockSecret()()
TMP_11(bool) = TMP_9 || TMP_10
CONDITION TMP_11"];
2->3[label="True"];
2->5[label="False"];
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
amount = 0

IRs:
amount(uint256) := 0(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
msg.sender.transfer(amount)

IRs:
Transfer dest:msg.sender value:amount"];
4->5;
5[label="Node Type: END_IF 5
"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
onlyPlayers()

IRs:
MODIFIER_CALL, DrainMe.onlyPlayers()()"];
6->1;
}
