digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->14;
1[label="Node Type: IF 1

EXPRESSION:
operator != address(0)

IRs:
TMP_141 = CONVERT 0 to address
TMP_142(bool) = operator != TMP_141
CONDITION TMP_142"];
1->2[label="True"];
1->4[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
Operated._setOperator(operator)

IRs:
INTERNAL_CALL, Operated._setOperator(address)(operator)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Operated._activateOperator()

IRs:
INTERNAL_CALL, Operated._activateOperator()()"];
3->4;
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: IF 5

EXPRESSION:
multihash.length != 0

IRs:
REF_73 -> LENGTH multihash
TMP_145(bool) = REF_73 != 0
CONDITION TMP_145"];
5->6[label="True"];
5->9[label="False"];
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
multihashObj = MultiHashWrapper._splitMultiHash(multihash)

IRs:
TMP_146(MultiHashWrapper.MultiHash) = INTERNAL_CALL, MultiHashWrapper._splitMultiHash(bytes)(multihash)
multihashObj(MultiHashWrapper.MultiHash) := TMP_146(MultiHashWrapper.MultiHash)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
ProofHashes._setMultiHashFormat(multihashObj.hashFunction,multihashObj.digestSize)

IRs:
REF_76(uint8) -> multihashObj.hashFunction
REF_77(uint8) -> multihashObj.digestSize
INTERNAL_CALL, ProofHashes._setMultiHashFormat(uint8,uint8)(REF_76,REF_77)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
ProofHashes._submitHash(multihashObj.hash)

IRs:
REF_79(bytes32) -> multihashObj.hash
INTERNAL_CALL, ProofHashes._submitHash(bytes32)(REF_79)"];
8->9;
9[label="Node Type: END_IF 9
"];
9->10;
10[label="Node Type: IF 10

EXPRESSION:
metadata.length != 0

IRs:
REF_80 -> LENGTH metadata
TMP_149(bool) = REF_80 != 0
CONDITION TMP_149"];
10->11[label="True"];
10->12[label="False"];
11[label="Node Type: EXPRESSION 11

EXPRESSION:
EventMetadata._setMetadata(metadata)

IRs:
INTERNAL_CALL, EventMetadata._setMetadata(bytes)(metadata)"];
11->12;
12[label="Node Type: END_IF 12
"];
12->13;
13[label="Node Type: EXPRESSION 13

EXPRESSION:
Initialized(operator,multihash,metadata)

IRs:
Emit Initialized(operator.multihash.metadata)"];
14[label="Node Type: EXPRESSION 14

EXPRESSION:
initializeTemplate()

IRs:
MODIFIER_CALL, Template.initializeTemplate()()"];
14->1;
}
