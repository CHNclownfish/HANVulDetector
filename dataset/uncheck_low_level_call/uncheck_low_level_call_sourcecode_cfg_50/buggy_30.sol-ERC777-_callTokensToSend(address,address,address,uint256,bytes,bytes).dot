digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
implementer = _erc1820.getInterfaceImplementer(from,TOKENS_SENDER_INTERFACE_HASH)

IRs:
TMP_108(address) = HIGH_LEVEL_CALL, dest:_erc1820(IERC1820Registry), function:getInterfaceImplementer, arguments:['from', 'TOKENS_SENDER_INTERFACE_HASH']  
implementer(address) := TMP_108(address)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
implementer != address(0)

IRs:
TMP_109 = CONVERT 0 to address
TMP_110(bool) = implementer != TMP_109
CONDITION TMP_110"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
IERC777Sender(implementer).tokensToSend(operator,from,to,amount,userData,operatorData)

IRs:
TMP_111 = CONVERT implementer to IERC777Sender
HIGH_LEVEL_CALL, dest:TMP_111(IERC777Sender), function:tokensToSend, arguments:['operator', 'from', 'to', 'amount', 'userData', 'operatorData']  "];
3->4;
4[label="Node Type: END_IF 4
"];
}
