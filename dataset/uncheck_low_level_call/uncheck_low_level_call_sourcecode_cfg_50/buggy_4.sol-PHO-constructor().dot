digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
sale = 0x071F73f4D0befd4406901AACE6D5FFD6D297c561

IRs:
sale(address) := 40664359716172103489929076226844439888627484001(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
evt = 0x76535ca5BF1d33434A302e5A464Df433BB1F80F6

IRs:
evt(address) := 675519943539621533015749657529364940191118098678(address)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
team = 0xD7EC5D8697e4c83Dc33D781d19dc2910fB165D5C

IRs:
team(address) := 1232704138836308878302751373176706876695649869148(address)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
saleAmount = toWei(1000000000)

IRs:
TMP_12(uint256) = INTERNAL_CALL, PHO.toWei(uint256)(1000000000)
saleAmount(uint256) := TMP_12(uint256)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
evtAmount = toWei(200000000)

IRs:
TMP_13(uint256) = INTERNAL_CALL, PHO.toWei(uint256)(200000000)
evtAmount(uint256) := TMP_13(uint256)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
teamAmount = toWei(800000000)

IRs:
TMP_14(uint256) = INTERNAL_CALL, PHO.toWei(uint256)(800000000)
teamAmount(uint256) := TMP_14(uint256)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
_totalSupply = toWei(2000000000)

IRs:
TMP_15(uint256) = INTERNAL_CALL, PHO.toWei(uint256)(2000000000)
_totalSupply(uint256) := TMP_15(uint256)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
require(bool)(_totalSupply == saleAmount + evtAmount + teamAmount)

IRs:
TMP_16(uint256) = saleAmount + evtAmount
TMP_17(uint256) = TMP_16 + teamAmount
TMP_18(bool) = _totalSupply == TMP_17
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
balances[owner] = _totalSupply

IRs:
REF_12(uint256) -> balances[owner]
REF_12 (->balances) := _totalSupply(uint256)"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
Transfer(address(0),owner,balances[owner])

IRs:
TMP_20 = CONVERT 0 to address
REF_13(uint256) -> balances[owner]
Emit Transfer(TMP_20.owner.REF_13)"];
11->12;
12[label="Node Type: EXPRESSION 12

EXPRESSION:
transfer(sale,saleAmount)

IRs:
TMP_22(bool) = INTERNAL_CALL, PHO.transfer(address,uint256)(sale,saleAmount)"];
12->13;
13[label="Node Type: EXPRESSION 13

EXPRESSION:
transfer(evt,evtAmount)

IRs:
TMP_23(bool) = INTERNAL_CALL, PHO.transfer(address,uint256)(evt,evtAmount)"];
13->14;
14[label="Node Type: EXPRESSION 14

EXPRESSION:
transfer(team,teamAmount)

IRs:
TMP_24(bool) = INTERNAL_CALL, PHO.transfer(address,uint256)(team,teamAmount)"];
14->15;
15[label="Node Type: EXPRESSION 15

EXPRESSION:
require(bool)(balances[owner] == 0)

IRs:
REF_14(uint256) -> balances[owner]
TMP_25(bool) = REF_14 == 0
TMP_26(None) = SOLIDITY_CALL require(bool)(TMP_25)"];
}
