digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
migratestate

IRs:
CONDITION migratestate"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
_value == 0

IRs:
TMP_140(bool) = _value == 0
CONDITION TMP_140"];
4->5[label="True"];
4->6[label="False"];
5[label="Node Type: THROW 5
"];
6[label="Node Type: END_IF 6
"];
6->7;
7[label="Node Type: IF 7

EXPRESSION:
_value > balances[msg.sender]

IRs:
REF_64(uint256) -> balances[msg.sender]
TMP_141(bool) = _value > REF_64
CONDITION TMP_141"];
7->8[label="True"];
7->9[label="False"];
8[label="Node Type: THROW 8
"];
9[label="Node Type: END_IF 9
"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
balances[msg.sender] -= _value

IRs:
REF_65(uint256) -> balances[msg.sender]
REF_65(-> balances) = REF_65 - _value"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
totalSupply -= _value

IRs:
totalSupply(uint256) = totalSupply - _value"];
11->12;
12[label="Node Type: EXPRESSION 12

EXPRESSION:
totalMigrated += _value

IRs:
totalMigrated(uint256) = totalMigrated + _value"];
12->13;
13[label="Node Type: EXPRESSION 13

EXPRESSION:
MigrationAgent(migrationAgent).migrateFrom(msg.sender,_value)

IRs:
TMP_142 = CONVERT migrationAgent to MigrationAgent
HIGH_LEVEL_CALL, dest:TMP_142(MigrationAgent), function:migrateFrom, arguments:['msg.sender', '_value']  "];
13->14;
14[label="Node Type: EXPRESSION 14

EXPRESSION:
Migrate(msg.sender,migrationAgent,_value)

IRs:
Emit Migrate(msg.sender.migrationAgent._value)"];
}
