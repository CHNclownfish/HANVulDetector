digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender == requests[0].requester && unrespondedCnt == 0

IRs:
REF_10(TownCrier.Request) -> requests[0]
REF_11(address) -> REF_10.requester
TMP_16(bool) = msg.sender == REF_11
TMP_17(bool) = unrespondedCnt == 0
TMP_18(bool) = TMP_16 && TMP_17
CONDITION TMP_18"];
1->2[label="True"];
1->5[label="False"];
2[label="Node Type: IF 2

EXPRESSION:
! requests[0].requester.call.value(this.balance)()

IRs:
REF_12(TownCrier.Request) -> requests[0]
REF_13(address) -> REF_12.requester
REF_16 -> BALANCE this
TMP_20(bool) = LOW_LEVEL_CALL, dest:REF_13, function:call, arguments:[] value:REF_16 
TMP_21 = ! TMP_20 
CONDITION TMP_21"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: THROW 3
"];
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: END_IF 5
"];
}
