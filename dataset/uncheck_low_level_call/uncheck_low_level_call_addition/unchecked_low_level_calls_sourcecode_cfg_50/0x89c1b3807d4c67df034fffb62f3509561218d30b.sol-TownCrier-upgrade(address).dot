digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender == requests[0].requester && unrespondedCnt == 0

IRs:
REF_2(TownCrier.Request) -> requests[0]
REF_3(address) -> REF_2.requester
TMP_0(bool) = msg.sender == REF_3
TMP_1(bool) = unrespondedCnt == 0
TMP_2(bool) = TMP_0 && TMP_1
CONDITION TMP_2"];
1->2[label="True"];
1->5[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
newVersion = - int256(newAddr)

IRs:
TMP_3 = CONVERT newAddr to int256
TMP_4(int256) = 0 - TMP_3
newVersion(int256) := TMP_4(int256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
killswitch = true

IRs:
killswitch(bool) := True(bool)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
Upgrade(newAddr)

IRs:
Emit Upgrade(newAddr)"];
4->5;
5[label="Node Type: END_IF 5
"];
}
