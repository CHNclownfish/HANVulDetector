digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(_startingPrice == uint256(uint128(_startingPrice)))

IRs:
TMP_1078 = CONVERT _startingPrice to uint128
TMP_1079 = CONVERT TMP_1078 to uint256
TMP_1080(bool) = _startingPrice == TMP_1079
TMP_1081(None) = SOLIDITY_CALL require(bool)(TMP_1080)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(_endingPrice == uint256(uint128(_endingPrice)))

IRs:
TMP_1082 = CONVERT _endingPrice to uint128
TMP_1083 = CONVERT TMP_1082 to uint256
TMP_1084(bool) = _endingPrice == TMP_1083
TMP_1085(None) = SOLIDITY_CALL require(bool)(TMP_1084)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(_duration == uint256(uint64(_duration)))

IRs:
TMP_1086 = CONVERT _duration to uint64
TMP_1087 = CONVERT TMP_1086 to uint256
TMP_1088(bool) = _duration == TMP_1087
TMP_1089(None) = SOLIDITY_CALL require(bool)(TMP_1088)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool)(msg.sender == address(nonFungibleContract))

IRs:
TMP_1090 = CONVERT nonFungibleContract to address
TMP_1091(bool) = msg.sender == TMP_1090
TMP_1092(None) = SOLIDITY_CALL require(bool)(TMP_1091)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
_escrow(_seller,_tokenId)

IRs:
INTERNAL_CALL, ClockAuctionBase._escrow(address,uint256)(_seller,_tokenId)"];
5->6;
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
auction = Auction(_seller,uint128(_startingPrice),uint128(_endingPrice),uint64(_duration),uint64(now),0)

IRs:
TMP_1094 = CONVERT _startingPrice to uint128
TMP_1095 = CONVERT _endingPrice to uint128
TMP_1096 = CONVERT _duration to uint64
TMP_1097 = CONVERT now to uint64
TMP_1098 = new Auction(_seller,TMP_1094,TMP_1095,TMP_1096,TMP_1097,0)
auction(ClockAuctionBase.Auction) := TMP_1098(ClockAuctionBase.Auction)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
_addAuction(_tokenId,auction)

IRs:
INTERNAL_CALL, ClockAuctionBase._addAuction(uint256,ClockAuctionBase.Auction)(_tokenId,auction)"];
}
