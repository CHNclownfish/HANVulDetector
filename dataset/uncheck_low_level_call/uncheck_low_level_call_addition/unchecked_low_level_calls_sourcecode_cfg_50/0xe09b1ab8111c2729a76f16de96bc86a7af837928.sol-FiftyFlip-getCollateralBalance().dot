digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
address(this).balance > lockedInBets + jackpotSize + devFeeSize

IRs:
TMP_101 = CONVERT this to address
REF_42 -> BALANCE TMP_101
TMP_102(uint256) = lockedInBets + jackpotSize
TMP_103(uint256) = TMP_102 + devFeeSize
TMP_104(bool) = REF_42 > TMP_103
CONDITION TMP_104"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
address(this).balance - lockedInBets - jackpotSize - devFeeSize

IRs:
TMP_105 = CONVERT this to address
REF_43 -> BALANCE TMP_105
TMP_106(uint256) = REF_43 - lockedInBets
TMP_107(uint256) = TMP_106 - jackpotSize
TMP_108(uint256) = TMP_107 - devFeeSize
RETURN TMP_108"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
0

IRs:
RETURN 0"];
}
