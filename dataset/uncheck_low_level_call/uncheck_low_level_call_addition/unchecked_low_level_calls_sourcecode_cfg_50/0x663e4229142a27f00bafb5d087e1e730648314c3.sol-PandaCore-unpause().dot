digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->6;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(saleAuction != address(0))

IRs:
TMP_2504 = CONVERT 0 to address
TMP_2505(bool) = saleAuction != TMP_2504
TMP_2506(None) = SOLIDITY_CALL require(bool)(TMP_2505)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(siringAuction != address(0))

IRs:
TMP_2507 = CONVERT 0 to address
TMP_2508(bool) = siringAuction != TMP_2507
TMP_2509(None) = SOLIDITY_CALL require(bool)(TMP_2508)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(geneScience != address(0))

IRs:
TMP_2510 = CONVERT 0 to address
TMP_2511(bool) = geneScience != TMP_2510
TMP_2512(None) = SOLIDITY_CALL require(bool)(TMP_2511)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool)(newContractAddress == address(0))

IRs:
TMP_2513 = CONVERT 0 to address
TMP_2514(bool) = newContractAddress == TMP_2513
TMP_2515(None) = SOLIDITY_CALL require(bool)(TMP_2514)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
super.unpause()

IRs:
INTERNAL_CALL, PandaAccessControl.unpause()()"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
onlyCEO()

IRs:
MODIFIER_CALL, PandaAccessControl.onlyCEO()()"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
whenPaused()

IRs:
MODIFIER_CALL, PandaAccessControl.whenPaused()()"];
7->1;
}
