digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->10;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.value >= autoBirthFee)

IRs:
TMP_2283(bool) = msg.value >= autoBirthFee
TMP_2284(None) = SOLIDITY_CALL require(bool)(TMP_2283)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(_owns(msg.sender,_matronId))

IRs:
TMP_2285(bool) = INTERNAL_CALL, PandaOwnership._owns(address,uint256)(msg.sender,_matronId)
TMP_2286(None) = SOLIDITY_CALL require(bool)(TMP_2285)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(_isSiringPermitted(_sireId,_matronId))

IRs:
TMP_2287(bool) = INTERNAL_CALL, PandaBreeding._isSiringPermitted(uint256,uint256)(_sireId,_matronId)
TMP_2288(None) = SOLIDITY_CALL require(bool)(TMP_2287)"];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
matron = pandas[_matronId]

IRs:
REF_688(PandaBase.Panda) -> pandas[_matronId]
matron(PandaBase.Panda) := REF_688(PandaBase.Panda)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
require(bool)(_isReadyToBreed(matron))

IRs:
TMP_2289(bool) = INTERNAL_CALL, PandaBreeding._isReadyToBreed(PandaBase.Panda)(matron)
TMP_2290(None) = SOLIDITY_CALL require(bool)(TMP_2289)"];
5->6;
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
sire = pandas[_sireId]

IRs:
REF_689(PandaBase.Panda) -> pandas[_sireId]
sire(PandaBase.Panda) := REF_689(PandaBase.Panda)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
require(bool)(_isReadyToBreed(sire))

IRs:
TMP_2291(bool) = INTERNAL_CALL, PandaBreeding._isReadyToBreed(PandaBase.Panda)(sire)
TMP_2292(None) = SOLIDITY_CALL require(bool)(TMP_2291)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
require(bool)(_isValidMatingPair(matron,_matronId,sire,_sireId))

IRs:
TMP_2293(bool) = INTERNAL_CALL, PandaBreeding._isValidMatingPair(PandaBase.Panda,uint256,PandaBase.Panda,uint256)(matron,_matronId,sire,_sireId)
TMP_2294(None) = SOLIDITY_CALL require(bool)(TMP_2293)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
_breedWith(_matronId,_sireId,msg.sender)

IRs:
INTERNAL_CALL, PandaBreeding._breedWith(uint256,uint256,address)(_matronId,_sireId,msg.sender)"];
10[label="Node Type: EXPRESSION 10

EXPRESSION:
whenNotPaused()

IRs:
MODIFIER_CALL, PandaAccessControl.whenNotPaused()()"];
10->1;
}
