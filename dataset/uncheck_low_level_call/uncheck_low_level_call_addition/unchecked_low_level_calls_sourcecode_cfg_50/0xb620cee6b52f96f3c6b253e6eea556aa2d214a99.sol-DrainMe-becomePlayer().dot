digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.value >= 20000000000000000)

IRs:
TMP_2(bool) = msg.value >= 20000000000000000
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
players.push(msg.sender)

IRs:
REF_4 -> LENGTH players
TMP_5(uint256) := REF_4(uint256)
TMP_6(uint256) = TMP_5 + 1
REF_4 (->players) := TMP_6(uint256)
REF_5(address) -> players[TMP_5]
REF_5 (->players) := msg.sender(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
approvedPlayers[msg.sender] = true

IRs:
REF_6(bool) -> approvedPlayers[msg.sender]
REF_6 (->approvedPlayers) := True(bool)"];
}
