digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(_owns(msg.sender,_pandaId))

IRs:
TMP_2174(bool) = INTERNAL_CALL, PandaOwnership._owns(address,uint256)(msg.sender,_pandaId)
TMP_2175(None) = SOLIDITY_CALL require(bool)(TMP_2174)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(! isPregnant(_pandaId))

IRs:
TMP_2176(bool) = INTERNAL_CALL, PandaBreeding.isPregnant(uint256)(_pandaId)
TMP_2177 = ! TMP_2176 
TMP_2178(None) = SOLIDITY_CALL require(bool)(TMP_2177)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_approve(_pandaId,saleAuctionERC20)

IRs:
INTERNAL_CALL, PandaOwnership._approve(uint256,address)(_pandaId,saleAuctionERC20)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
saleAuctionERC20.createAuction(_pandaId,_erc20address,_startingPrice,_endingPrice,_duration,msg.sender)

IRs:
HIGH_LEVEL_CALL, dest:saleAuctionERC20(SaleClockAuctionERC20), function:createAuction, arguments:['_pandaId', '_erc20address', '_startingPrice', '_endingPrice', '_duration', 'msg.sender']  "];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
whenNotPaused()

IRs:
MODIFIER_CALL, PandaAccessControl.whenNotPaused()()"];
5->1;
}
