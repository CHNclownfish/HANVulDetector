digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
bugv_tmstmp5 = block.timestamp

IRs:
bugv_tmstmp5(uint256) := block.timestamp(uint256)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
bugv_tmstmp1 = block.timestamp

IRs:
bugv_tmstmp1(uint256) := block.timestamp(uint256)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
name = Exclusive Platform

IRs:
name(string) := Exclusive Platform(string)"];
2->3;
3[label="Node Type: OTHER_ENTRYPOINT 3

EXPRESSION:
symbol = XPL

IRs:
symbol(string) := XPL(string)"];
3->4;
4[label="Node Type: OTHER_ENTRYPOINT 4

EXPRESSION:
decimals = 8

IRs:
decimals(uint256) := 8(uint256)"];
4->5;
5[label="Node Type: OTHER_ENTRYPOINT 5

EXPRESSION:
XPLPerEther = 8000000e8

IRs:
XPLPerEther(uint256) := 800000000000000(uint256)"];
5->6;
6[label="Node Type: OTHER_ENTRYPOINT 6

EXPRESSION:
minimumBuy = 1000000000000000000 / 100

IRs:
TMP_275(uint256) = 1000000000000000000 / 100
minimumBuy(uint256) := TMP_275(uint256)"];
6->7;
7[label="Node Type: OTHER_ENTRYPOINT 7

EXPRESSION:
crowdsaleIsOn = true

IRs:
crowdsaleIsOn(bool) := True(bool)"];
7->8;
8[label="Node Type: OTHER_ENTRYPOINT 8

EXPRESSION:
bugv_tmstmp2 = block.timestamp

IRs:
bugv_tmstmp2(uint256) := block.timestamp(uint256)"];
8->9;
9[label="Node Type: OTHER_ENTRYPOINT 9

EXPRESSION:
bugv_tmstmp3 = block.timestamp

IRs:
bugv_tmstmp3(uint256) := block.timestamp(uint256)"];
9->10;
10[label="Node Type: OTHER_ENTRYPOINT 10

EXPRESSION:
bugv_tmstmp4 = block.timestamp

IRs:
bugv_tmstmp4(uint256) := block.timestamp(uint256)"];
}
