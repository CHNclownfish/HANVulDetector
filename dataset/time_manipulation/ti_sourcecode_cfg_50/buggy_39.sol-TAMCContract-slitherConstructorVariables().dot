digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
name = TAMC

IRs:
name(string) := TAMC(string)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
symbol = TAMC

IRs:
symbol(string) := TAMC(string)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
decimals = 18

IRs:
decimals(uint8) := 18(uint256)"];
2->3;
3[label="Node Type: OTHER_ENTRYPOINT 3

EXPRESSION:
totalSupply = 1000000000 * (uint256(10) ** decimals)

IRs:
TMP_30 = CONVERT 10 to uint256
TMP_31(uint256) = TMP_30 ** decimals
TMP_32(uint256) = 1000000000 * TMP_31
totalSupply(uint256) := TMP_32(uint256)"];
3->4;
4[label="Node Type: OTHER_ENTRYPOINT 4

EXPRESSION:
bugv_tmstmp3 = block.timestamp

IRs:
bugv_tmstmp3(uint256) := block.timestamp(uint256)"];
4->5;
5[label="Node Type: OTHER_ENTRYPOINT 5

EXPRESSION:
bugv_tmstmp5 = block.timestamp

IRs:
bugv_tmstmp5(uint256) := block.timestamp(uint256)"];
5->6;
6[label="Node Type: OTHER_ENTRYPOINT 6

EXPRESSION:
bugv_tmstmp4 = block.timestamp

IRs:
bugv_tmstmp4(uint256) := block.timestamp(uint256)"];
6->7;
7[label="Node Type: OTHER_ENTRYPOINT 7

EXPRESSION:
bugv_tmstmp1 = block.timestamp

IRs:
bugv_tmstmp1(uint256) := block.timestamp(uint256)"];
7->8;
8[label="Node Type: OTHER_ENTRYPOINT 8

EXPRESSION:
bugv_tmstmp2 = block.timestamp

IRs:
bugv_tmstmp2(uint256) := block.timestamp(uint256)"];
}
