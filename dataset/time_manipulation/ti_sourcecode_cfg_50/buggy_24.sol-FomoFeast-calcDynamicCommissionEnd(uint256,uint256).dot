digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->12;
1[label="Node Type: BEGIN_LOOP 1
"];
1->4;
2[label="Node Type: END_LOOP 2
"];
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
i = index

IRs:
i(uint256) := index(uint256)"];
3->1;
4[label="Node Type: IF_LOOP 4

EXPRESSION:
i < (index + length)

IRs:
TMP_392(uint256) = index + length
TMP_393(bool) = i < TMP_392
CONDITION TMP_393"];
4->5[label="True"];
4->2[label="False"];
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
userAddress = addressMapping[i]

IRs:
REF_380(address) -> addressMapping[i]
userAddress(address) := REF_380(address)"];
5->6;
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
user = userMapping[userAddress]

IRs:
REF_381(FomoFeast.User) -> userMapping[userAddress]
user(FomoFeast.User) := REF_381(FomoFeast.User)"];
6->7;
7[label="Node Type: IF 7

EXPRESSION:
user.calcDynamicCommissionAmount > 0

IRs:
REF_382(uint256) -> user.calcDynamicCommissionAmount
TMP_394(bool) = REF_382 > 0
CONDITION TMP_394"];
7->8[label="True"];
7->10[label="False"];
8[label="Node Type: EXPRESSION 8

EXPRESSION:
user.dynamicCommissionBalance = user.dynamicCommissionBalance.add(user.calcDynamicCommissionAmount)

IRs:
REF_383(uint256) -> user.dynamicCommissionBalance
REF_384(uint256) -> user.dynamicCommissionBalance
REF_386(uint256) -> user.calcDynamicCommissionAmount
TMP_395(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_384', 'REF_386'] 
REF_383 (->user) := TMP_395(uint256)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
addDynamicCommissionRecord(userAddress,now,user.calcDynamicCommissionAmount)

IRs:
REF_387(uint256) -> user.calcDynamicCommissionAmount
INTERNAL_CALL, FomoFeast.addDynamicCommissionRecord(address,uint256,uint256)(userAddress,now,REF_387)"];
9->10;
10[label="Node Type: END_IF 10
"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1"];
11->4;
12[label="Node Type: EXPRESSION 12

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()"];
12->3;
}
