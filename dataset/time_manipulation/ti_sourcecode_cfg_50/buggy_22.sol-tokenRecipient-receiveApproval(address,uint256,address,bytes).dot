digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
t = Token(_token)

IRs:
TMP_14 = CONVERT _token to Token
t(Token) := TMP_14(Token)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(t.transferFrom(_from,address(this),_value))

IRs:
TMP_15 = CONVERT this to address
TMP_16(bool) = HIGH_LEVEL_CALL, dest:t(Token), function:transferFrom, arguments:['_from', 'TMP_15', '_value']  
TMP_17(None) = SOLIDITY_CALL require(bool)(TMP_16)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
receivedTokens(_from,_value,_token,_extraData)

IRs:
Emit receivedTokens(_from._value._token._extraData)"];
}
