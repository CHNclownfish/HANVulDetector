digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->3;
1[label="Node Type: BEGIN_LOOP 1
"];
1->4;
2[label="Node Type: END_LOOP 2
"];
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
3->1;
4[label="Node Type: IF_LOOP 4

EXPRESSION:
i < _addresses.length

IRs:
REF_24 -> LENGTH _addresses
TMP_165(bool) = i < REF_24
CONDITION TMP_165"];
4->5[label="True"];
4->2[label="False"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
transfer(_addresses[i],_amount)

IRs:
REF_25(address) -> _addresses[i]
TMP_166(bool) = INTERNAL_CALL, ExclusivePlatform.transfer(address,uint256)(REF_25,_amount)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
i ++

IRs:
TMP_167(uint256) := i(uint256)
i(uint256) = i + 1"];
6->4;
}
