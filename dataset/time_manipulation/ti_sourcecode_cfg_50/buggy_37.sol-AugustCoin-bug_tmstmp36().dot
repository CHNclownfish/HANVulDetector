digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(msg.value == 10000000000000000000)

IRs:
TMP_183(bool) = msg.value == 10000000000000000000
TMP_184(None) = SOLIDITY_CALL require(bool)(TMP_183)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(now != pastBlockTime_tmstmp36)

IRs:
TMP_185(bool) = now != pastBlockTime_tmstmp36
TMP_186(None) = SOLIDITY_CALL require(bool)(TMP_185)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
pastBlockTime_tmstmp36 = now

IRs:
pastBlockTime_tmstmp36(uint256) := now(uint256)"];
4->5;
5[label="Node Type: IF 5

EXPRESSION:
now % 15 == 0

IRs:
TMP_187(uint256) = now % 15
TMP_188(bool) = TMP_187 == 0
CONDITION TMP_188"];
5->6[label="True"];
5->7[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
msg.sender.transfer(address(this).balance)

IRs:
TMP_189 = CONVERT this to address
REF_20 -> BALANCE TMP_189
Transfer dest:msg.sender value:REF_20"];
6->7;
7[label="Node Type: END_IF 7
"];
}
