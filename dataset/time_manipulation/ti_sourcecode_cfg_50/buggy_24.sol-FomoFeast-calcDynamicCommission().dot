digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->57;
1[label="Node Type: BEGIN_LOOP 1
"];
1->4;
2[label="Node Type: END_LOOP 2
"];
2->10;
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
3->1;
4[label="Node Type: IF_LOOP 4

EXPRESSION:
i < totalUserCount

IRs:
TMP_324(bool) = i < totalUserCount
CONDITION TMP_324"];
4->5[label="True"];
4->2[label="False"];
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
user = userMapping[addressMapping[i]]

IRs:
REF_310(address) -> addressMapping[i]
REF_311(FomoFeast.User) -> userMapping[REF_310]
user(FomoFeast.User) := REF_311(FomoFeast.User)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
user.calcDynamicCommissionAmount = 0

IRs:
REF_312(uint256) -> user.calcDynamicCommissionAmount
REF_312 (->user) := 0(uint256)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1"];
7->4;
8[label="Node Type: BEGIN_LOOP 8
"];
8->11;
9[label="Node Type: END_LOOP 9
"];
9->48;
10[label="Node Type: NEW VARIABLE 10

EXPRESSION:
i_scope_0 = 0

IRs:
i_scope_0(uint256) := 0(uint256)"];
10->8;
11[label="Node Type: IF_LOOP 11

EXPRESSION:
i_scope_0 < totalUserCount

IRs:
TMP_325(bool) = i_scope_0 < totalUserCount
CONDITION TMP_325"];
11->12[label="True"];
11->9[label="False"];
12[label="Node Type: NEW VARIABLE 12

EXPRESSION:
user_scope_1 = userMapping[addressMapping[i_scope_0]]

IRs:
REF_313(address) -> addressMapping[i_scope_0]
REF_314(FomoFeast.User) -> userMapping[REF_313]
user_scope_1(FomoFeast.User) := REF_314(FomoFeast.User)"];
12->13;
13[label="Node Type: IF 13

EXPRESSION:
user_scope_1.currentInvestAmount > 0

IRs:
REF_315(uint256) -> user_scope_1.currentInvestAmount
TMP_326(bool) = REF_315 > 0
CONDITION TMP_326"];
13->14[label="True"];
13->44[label="False"];
14[label="Node Type: NEW VARIABLE 14

EXPRESSION:
commissionDays = now.sub(user_scope_1.currentInvestTime).div(ONE_DAY)

IRs:
REF_317(uint256) -> user_scope_1.currentInvestTime
TMP_327(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['now', 'REF_317'] 
TMP_328(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_327', 'ONE_DAY'] 
commissionDays(uint256) := TMP_328(uint256)"];
14->15;
15[label="Node Type: IF 15

EXPRESSION:
commissionDays >= 1 && commissionDays <= user_scope_1.currentInvestCycle

IRs:
TMP_329(bool) = commissionDays >= 1
REF_319(uint256) -> user_scope_1.currentInvestCycle
TMP_330(bool) = commissionDays <= REF_319
TMP_331(bool) = TMP_329 && TMP_330
CONDITION TMP_331"];
15->16[label="True"];
15->43[label="False"];
16[label="Node Type: NEW VARIABLE 16

EXPRESSION:
depth = 1

IRs:
depth(uint256) := 1(uint256)"];
16->17;
17[label="Node Type: NEW VARIABLE 17

EXPRESSION:
addressWalker = user_scope_1.sponsorAddress

IRs:
REF_320(address) -> user_scope_1.sponsorAddress
addressWalker(address) := REF_320(address)"];
17->18;
18[label="Node Type: BEGIN_LOOP 18
"];
18->19;
19[label="Node Type: IF_LOOP 19

EXPRESSION:
addressWalker != GENESIS_USER_ADDRESS

IRs:
TMP_332(bool) = addressWalker != GENESIS_USER_ADDRESS
CONDITION TMP_332"];
19->20[label="True"];
19->42[label="False"];
20[label="Node Type: NEW VARIABLE 20

EXPRESSION:
sponsor = userMapping[addressWalker]

IRs:
REF_321(FomoFeast.User) -> userMapping[addressWalker]
sponsor(FomoFeast.User) := REF_321(FomoFeast.User)"];
20->21;
21[label="Node Type: IF 21

EXPRESSION:
sponsor.currentInvestAmount > 0

IRs:
REF_322(uint256) -> sponsor.currentInvestAmount
TMP_333(bool) = REF_322 > 0
CONDITION TMP_333"];
21->22[label="True"];
21->39[label="False"];
22[label="Node Type: NEW VARIABLE 22

EXPRESSION:
dynamicCommissionRatio = getDynamicCommissionRatio(sponsor,depth)

IRs:
TMP_334(uint256) = INTERNAL_CALL, FomoFeast.getDynamicCommissionRatio(FomoFeast.User,uint256)(sponsor,depth)
dynamicCommissionRatio(uint256) := TMP_334(uint256)"];
22->23;
23[label="Node Type: IF 23

EXPRESSION:
dynamicCommissionRatio > 0

IRs:
TMP_335(bool) = dynamicCommissionRatio > 0
CONDITION TMP_335"];
23->24[label="True"];
23->38[label="False"];
24[label="Node Type: NEW VARIABLE 24

EXPRESSION:
dynamicCA = sponsor.currentInvestAmount

IRs:
REF_323(uint256) -> sponsor.currentInvestAmount
dynamicCA(uint256) := REF_323(uint256)"];
24->25;
25[label="Node Type: IF 25

EXPRESSION:
dynamicCA > user_scope_1.currentInvestAmount

IRs:
REF_324(uint256) -> user_scope_1.currentInvestAmount
TMP_336(bool) = dynamicCA > REF_324
CONDITION TMP_336"];
25->26[label="True"];
25->27[label="False"];
26[label="Node Type: EXPRESSION 26

EXPRESSION:
dynamicCA = user_scope_1.currentInvestAmount

IRs:
REF_325(uint256) -> user_scope_1.currentInvestAmount
dynamicCA(uint256) := REF_325(uint256)"];
26->27;
27[label="Node Type: END_IF 27
"];
27->28;
28[label="Node Type: EXPRESSION 28

EXPRESSION:
dynamicCA = dynamicCA.mul(user_scope_1.currentStaticCommissionRatio)

IRs:
REF_327(uint256) -> user_scope_1.currentStaticCommissionRatio
TMP_337(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'REF_327'] 
dynamicCA(uint256) := TMP_337(uint256)"];
28->29;
29[label="Node Type: EXPRESSION 29

EXPRESSION:
dynamicCA = dynamicCA.mul(dynamicCommissionRatio)

IRs:
TMP_338(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', 'dynamicCommissionRatio'] 
dynamicCA(uint256) := TMP_338(uint256)"];
29->30;
30[label="Node Type: IF 30

EXPRESSION:
sponsor.currentlevel == 1

IRs:
REF_329(uint256) -> sponsor.currentlevel
TMP_339(bool) = REF_329 == 1
CONDITION TMP_339"];
30->31[label="True"];
30->32[label="False"];
31[label="Node Type: EXPRESSION 31

EXPRESSION:
dynamicCA = dynamicCA.mul(3).div(1000 * 100 * 10)

IRs:
TMP_340(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '3'] 
TMP_341(uint256) = 1000 * 100
TMP_342(uint256) = TMP_341 * 10
TMP_343(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_340', 'TMP_342'] 
dynamicCA(uint256) := TMP_343(uint256)"];
31->36;
32[label="Node Type: IF 32

EXPRESSION:
sponsor.currentlevel == 2

IRs:
REF_332(uint256) -> sponsor.currentlevel
TMP_344(bool) = REF_332 == 2
CONDITION TMP_344"];
32->33[label="True"];
32->34[label="False"];
33[label="Node Type: EXPRESSION 33

EXPRESSION:
dynamicCA = dynamicCA.mul(6).div(1000 * 100 * 10)

IRs:
TMP_345(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['dynamicCA', '6'] 
TMP_346(uint256) = 1000 * 100
TMP_347(uint256) = TMP_346 * 10
TMP_348(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_345', 'TMP_347'] 
dynamicCA(uint256) := TMP_348(uint256)"];
33->35;
34[label="Node Type: EXPRESSION 34

EXPRESSION:
dynamicCA = dynamicCA.div(1000 * 100)

IRs:
TMP_349(uint256) = 1000 * 100
TMP_350(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['dynamicCA', 'TMP_349'] 
dynamicCA(uint256) := TMP_350(uint256)"];
34->35;
35[label="Node Type: END_IF 35
"];
35->36;
36[label="Node Type: END_IF 36
"];
36->37;
37[label="Node Type: EXPRESSION 37

EXPRESSION:
sponsor.calcDynamicCommissionAmount = sponsor.calcDynamicCommissionAmount.add(dynamicCA)

IRs:
REF_336(uint256) -> sponsor.calcDynamicCommissionAmount
REF_337(uint256) -> sponsor.calcDynamicCommissionAmount
TMP_351(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_337', 'dynamicCA'] 
REF_336 (->sponsor) := TMP_351(uint256)"];
37->38;
38[label="Node Type: END_IF 38
"];
38->39;
39[label="Node Type: END_IF 39
"];
39->40;
40[label="Node Type: EXPRESSION 40

EXPRESSION:
addressWalker = sponsor.sponsorAddress

IRs:
REF_339(address) -> sponsor.sponsorAddress
addressWalker(address) := REF_339(address)"];
40->41;
41[label="Node Type: EXPRESSION 41

EXPRESSION:
depth = depth.add(1)

IRs:
TMP_352(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['depth', '1'] 
depth(uint256) := TMP_352(uint256)"];
41->19;
42[label="Node Type: END_LOOP 42
"];
42->43;
43[label="Node Type: END_IF 43
"];
43->44;
44[label="Node Type: END_IF 44
"];
44->45;
45[label="Node Type: EXPRESSION 45

EXPRESSION:
++ i_scope_0

IRs:
i_scope_0(uint256) = i_scope_0 + 1"];
45->11;
46[label="Node Type: BEGIN_LOOP 46
"];
46->49;
47[label="Node Type: END_LOOP 47
"];
48[label="Node Type: NEW VARIABLE 48

EXPRESSION:
i_scope_2 = 0

IRs:
i_scope_2(uint256) := 0(uint256)"];
48->46;
49[label="Node Type: IF_LOOP 49

EXPRESSION:
i_scope_2 < totalUserCount

IRs:
TMP_353(bool) = i_scope_2 < totalUserCount
CONDITION TMP_353"];
49->50[label="True"];
49->47[label="False"];
50[label="Node Type: NEW VARIABLE 50

EXPRESSION:
userAddress = addressMapping[i_scope_2]

IRs:
REF_341(address) -> addressMapping[i_scope_2]
userAddress(address) := REF_341(address)"];
50->51;
51[label="Node Type: NEW VARIABLE 51

EXPRESSION:
user_scope_3 = userMapping[userAddress]

IRs:
REF_342(FomoFeast.User) -> userMapping[userAddress]
user_scope_3(FomoFeast.User) := REF_342(FomoFeast.User)"];
51->52;
52[label="Node Type: IF 52

EXPRESSION:
user_scope_3.calcDynamicCommissionAmount > 0

IRs:
REF_343(uint256) -> user_scope_3.calcDynamicCommissionAmount
TMP_354(bool) = REF_343 > 0
CONDITION TMP_354"];
52->53[label="True"];
52->55[label="False"];
53[label="Node Type: EXPRESSION 53

EXPRESSION:
user_scope_3.dynamicCommissionBalance = user_scope_3.dynamicCommissionBalance.add(user_scope_3.calcDynamicCommissionAmount)

IRs:
REF_344(uint256) -> user_scope_3.dynamicCommissionBalance
REF_345(uint256) -> user_scope_3.dynamicCommissionBalance
REF_347(uint256) -> user_scope_3.calcDynamicCommissionAmount
TMP_355(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_345', 'REF_347'] 
REF_344 (->user_scope_3) := TMP_355(uint256)"];
53->54;
54[label="Node Type: EXPRESSION 54

EXPRESSION:
addDynamicCommissionRecord(userAddress,now,user_scope_3.calcDynamicCommissionAmount)

IRs:
REF_348(uint256) -> user_scope_3.calcDynamicCommissionAmount
INTERNAL_CALL, FomoFeast.addDynamicCommissionRecord(address,uint256,uint256)(userAddress,now,REF_348)"];
54->55;
55[label="Node Type: END_IF 55
"];
55->56;
56[label="Node Type: EXPRESSION 56

EXPRESSION:
++ i_scope_2

IRs:
i_scope_2(uint256) = i_scope_2 + 1"];
56->49;
57[label="Node Type: EXPRESSION 57

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, FomoFeast.onlyOwner()()"];
57->3;
}
