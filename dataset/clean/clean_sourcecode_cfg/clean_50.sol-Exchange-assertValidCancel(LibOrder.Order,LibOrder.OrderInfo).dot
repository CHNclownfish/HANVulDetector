digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(orderInfo.orderStatus == uint8(OrderStatus.FILLABLE),ORDER_UNFILLABLE)

IRs:
REF_720(uint8) -> orderInfo.orderStatus
REF_721(LibOrder.OrderStatus) -> OrderStatus.FILLABLE
TMP_1021 = CONVERT REF_721 to uint8
TMP_1022(bool) = REF_720 == TMP_1021
TMP_1023(None) = SOLIDITY_CALL require(bool,string)(TMP_1022,ORDER_UNFILLABLE)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
order.senderAddress != address(0)

IRs:
REF_722(address) -> order.senderAddress
TMP_1024 = CONVERT 0 to address
TMP_1025(bool) = REF_722 != TMP_1024
CONDITION TMP_1025"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool,string)(order.senderAddress == msg.sender,INVALID_SENDER)

IRs:
REF_723(address) -> order.senderAddress
TMP_1026(bool) = REF_723 == msg.sender
TMP_1027(None) = SOLIDITY_CALL require(bool,string)(TMP_1026,INVALID_SENDER)"];
3->4;
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
makerAddress = getCurrentContextAddress()

IRs:
TMP_1028(address) = INTERNAL_CALL, MixinTransactions.getCurrentContextAddress()()
makerAddress(address) := TMP_1028(address)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
require(bool,string)(order.makerAddress == makerAddress,INVALID_MAKER)

IRs:
REF_724(address) -> order.makerAddress
TMP_1029(bool) = REF_724 == makerAddress
TMP_1030(None) = SOLIDITY_CALL require(bool,string)(TMP_1029,INVALID_MAKER)"];
}
