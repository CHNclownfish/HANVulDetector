digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(_addr != address(0))

IRs:
TMP_29 = CONVERT 0 to address
TMP_30(bool) = _addr != TMP_29
TMP_31(None) = SOLIDITY_CALL require(bool)(TMP_30)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(whitelist[_addr] != _state)

IRs:
REF_0(bool) -> whitelist[_addr]
TMP_32(bool) = REF_0 != _state
TMP_33(None) = SOLIDITY_CALL require(bool)(TMP_32)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
whitelist[_addr] = _state

IRs:
REF_1(bool) -> whitelist[_addr]
REF_1 (->whitelist) := _state(bool)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
WhitelistChanged(_addr,_state)

IRs:
Emit WhitelistChanged(_addr._state)"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()"];
5->1;
}
