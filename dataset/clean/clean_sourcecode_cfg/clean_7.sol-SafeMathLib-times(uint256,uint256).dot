digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
c = a * b

IRs:
TMP_154(uint256) = a * b
c(uint256) := TMP_154(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
assert(a == 0 || c / a == b)

IRs:
TMP_155(bool) = a == 0
TMP_156(uint256) = c / a
TMP_157(bool) = TMP_156 == b
TMP_158(bool) = TMP_155 || TMP_157
INTERNAL_CALL, SafeMathLib.assert(bool)(TMP_158)"];
2->3;
3[label="Node Type: RETURN 3

EXPRESSION:
c

IRs:
RETURN c"];
}
