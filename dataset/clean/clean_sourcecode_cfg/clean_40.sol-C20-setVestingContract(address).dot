digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(vestingContractInput != address(0))

IRs:
TMP_128 = CONVERT 0 to address
TMP_129(bool) = vestingContractInput != TMP_128
TMP_130(None) = SOLIDITY_CALL require(bool)(TMP_129)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
vestingContract = vestingContractInput

IRs:
vestingContract(address) := vestingContractInput(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
whitelist[vestingContract] = true

IRs:
REF_58(bool) -> whitelist[vestingContract]
REF_58 (->whitelist) := True(bool)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
vestingSet = true

IRs:
vestingSet(bool) := True(bool)"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyFundWallet()

IRs:
MODIFIER_CALL, C20.onlyFundWallet()()"];
5->1;
}
