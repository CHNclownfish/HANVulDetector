digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
validateContestForSig(_attester,_requester,_reward,_requestNonce,_delegationSig)

IRs:
INTERNAL_CALL, AttestationLogic.validateContestForSig(address,address,uint256,bytes32,bytes)(_attester,_requester,_reward,_requestNonce,_delegationSig)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
contestForUser(_attester,_requester,_reward,_requestNonce,_requesterSig)

IRs:
INTERNAL_CALL, AttestationLogic.contestForUser(address,address,uint256,bytes32,bytes)(_attester,_requester,_reward,_requestNonce,_requesterSig)"];
}
