digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
! canUpgrade()

IRs:
TMP_132(bool) = INTERNAL_CALL, UpgradeableToken.canUpgrade()()
TMP_133 = ! TMP_132 
CONDITION TMP_133"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
UpgradeState.NotAllowed

IRs:
REF_47(UpgradeableToken.UpgradeState) -> UpgradeState.NotAllowed
RETURN REF_47"];
3[label="Node Type: IF 3

EXPRESSION:
address(upgradeAgent) == 0x00

IRs:
TMP_134 = CONVERT upgradeAgent to address
TMP_135(bool) = TMP_134 == 0
CONDITION TMP_135"];
3->4[label="True"];
3->5[label="False"];
4[label="Node Type: RETURN 4

EXPRESSION:
UpgradeState.WaitingForAgent

IRs:
REF_48(UpgradeableToken.UpgradeState) -> UpgradeState.WaitingForAgent
RETURN REF_48"];
5[label="Node Type: IF 5

EXPRESSION:
totalUpgraded == 0

IRs:
TMP_136(bool) = totalUpgraded == 0
CONDITION TMP_136"];
5->6[label="True"];
5->7[label="False"];
6[label="Node Type: RETURN 6

EXPRESSION:
UpgradeState.ReadyToUpgrade

IRs:
REF_49(UpgradeableToken.UpgradeState) -> UpgradeState.ReadyToUpgrade
RETURN REF_49"];
7[label="Node Type: RETURN 7

EXPRESSION:
UpgradeState.Upgrading

IRs:
REF_50(UpgradeableToken.UpgradeState) -> UpgradeState.Upgrading
RETURN REF_50"];
}
