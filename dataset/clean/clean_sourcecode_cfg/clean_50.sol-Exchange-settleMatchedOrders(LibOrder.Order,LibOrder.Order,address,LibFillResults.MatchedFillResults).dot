digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
zrxAssetData = ZRX_ASSET_DATA

IRs:
zrxAssetData(bytes) := ZRX_ASSET_DATA(bytes)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
dispatchTransferFrom(leftOrder.makerAssetData,leftOrder.makerAddress,rightOrder.makerAddress,matchedFillResults.right.takerAssetFilledAmount)

IRs:
REF_618(bytes) -> leftOrder.makerAssetData
REF_619(address) -> leftOrder.makerAddress
REF_620(address) -> rightOrder.makerAddress
REF_621(LibFillResults.FillResults) -> matchedFillResults.right
REF_622(uint256) -> REF_621.takerAssetFilledAmount
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(REF_618,REF_619,REF_620,REF_622)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
dispatchTransferFrom(rightOrder.makerAssetData,rightOrder.makerAddress,leftOrder.makerAddress,matchedFillResults.left.takerAssetFilledAmount)

IRs:
REF_623(bytes) -> rightOrder.makerAssetData
REF_624(address) -> rightOrder.makerAddress
REF_625(address) -> leftOrder.makerAddress
REF_626(LibFillResults.FillResults) -> matchedFillResults.left
REF_627(uint256) -> REF_626.takerAssetFilledAmount
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(REF_623,REF_624,REF_625,REF_627)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
dispatchTransferFrom(leftOrder.makerAssetData,leftOrder.makerAddress,takerAddress,matchedFillResults.leftMakerAssetSpreadAmount)

IRs:
REF_628(bytes) -> leftOrder.makerAssetData
REF_629(address) -> leftOrder.makerAddress
REF_630(uint256) -> matchedFillResults.leftMakerAssetSpreadAmount
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(REF_628,REF_629,takerAddress,REF_630)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
dispatchTransferFrom(zrxAssetData,leftOrder.makerAddress,leftOrder.feeRecipientAddress,matchedFillResults.left.makerFeePaid)

IRs:
REF_631(address) -> leftOrder.makerAddress
REF_632(address) -> leftOrder.feeRecipientAddress
REF_633(LibFillResults.FillResults) -> matchedFillResults.left
REF_634(uint256) -> REF_633.makerFeePaid
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(zrxAssetData,REF_631,REF_632,REF_634)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
dispatchTransferFrom(zrxAssetData,rightOrder.makerAddress,rightOrder.feeRecipientAddress,matchedFillResults.right.makerFeePaid)

IRs:
REF_635(address) -> rightOrder.makerAddress
REF_636(address) -> rightOrder.feeRecipientAddress
REF_637(LibFillResults.FillResults) -> matchedFillResults.right
REF_638(uint256) -> REF_637.makerFeePaid
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(zrxAssetData,REF_635,REF_636,REF_638)"];
6->7;
7[label="Node Type: IF 7

EXPRESSION:
leftOrder.feeRecipientAddress == rightOrder.feeRecipientAddress

IRs:
REF_639(address) -> leftOrder.feeRecipientAddress
REF_640(address) -> rightOrder.feeRecipientAddress
TMP_951(bool) = REF_639 == REF_640
CONDITION TMP_951"];
7->8[label="True"];
7->9[label="False"];
8[label="Node Type: EXPRESSION 8

EXPRESSION:
dispatchTransferFrom(zrxAssetData,takerAddress,leftOrder.feeRecipientAddress,safeAdd(matchedFillResults.left.takerFeePaid,matchedFillResults.right.takerFeePaid))

IRs:
REF_641(address) -> leftOrder.feeRecipientAddress
REF_642(LibFillResults.FillResults) -> matchedFillResults.left
REF_643(uint256) -> REF_642.takerFeePaid
REF_644(LibFillResults.FillResults) -> matchedFillResults.right
REF_645(uint256) -> REF_644.takerFeePaid
TMP_952(uint256) = INTERNAL_CALL, SafeMath.safeAdd(uint256,uint256)(REF_643,REF_645)
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(zrxAssetData,takerAddress,REF_641,TMP_952)"];
8->11;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
dispatchTransferFrom(zrxAssetData,takerAddress,leftOrder.feeRecipientAddress,matchedFillResults.left.takerFeePaid)

IRs:
REF_646(address) -> leftOrder.feeRecipientAddress
REF_647(LibFillResults.FillResults) -> matchedFillResults.left
REF_648(uint256) -> REF_647.takerFeePaid
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(zrxAssetData,takerAddress,REF_646,REF_648)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
dispatchTransferFrom(zrxAssetData,takerAddress,rightOrder.feeRecipientAddress,matchedFillResults.right.takerFeePaid)

IRs:
REF_649(address) -> rightOrder.feeRecipientAddress
REF_650(LibFillResults.FillResults) -> matchedFillResults.right
REF_651(uint256) -> REF_650.takerFeePaid
INTERNAL_CALL, MixinAssetProxyDispatcher.dispatchTransferFrom(bytes,address,address,uint256)(zrxAssetData,takerAddress,REF_649,REF_651)"];
10->11;
11[label="Node Type: END_IF 11
"];
}
