digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
EIP712DOMAIN_TYPEHASH = keccak256()(EIP712Domain(string name,string version,uint256 chainId,address verifyingContract))

IRs:
TMP_84(bytes32) = SOLIDITY_CALL keccak256()(EIP712Domain(string name,string version,uint256 chainId,address verifyingContract))
EIP712DOMAIN_TYPEHASH(bytes32) := TMP_84(bytes32)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
ATTESTATION_REQUEST_TYPEHASH = keccak256()(AttestationRequest(bytes32 dataHash,bytes32 nonce))

IRs:
TMP_85(bytes32) = SOLIDITY_CALL keccak256()(AttestationRequest(bytes32 dataHash,bytes32 nonce))
ATTESTATION_REQUEST_TYPEHASH(bytes32) := TMP_85(bytes32)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
ADD_ADDRESS_TYPEHASH = keccak256()(AddAddress(address addressToAdd,bytes32 nonce))

IRs:
TMP_86(bytes32) = SOLIDITY_CALL keccak256()(AddAddress(address addressToAdd,bytes32 nonce))
ADD_ADDRESS_TYPEHASH(bytes32) := TMP_86(bytes32)"];
2->3;
3[label="Node Type: OTHER_ENTRYPOINT 3

EXPRESSION:
REMOVE_ADDRESS_TYPEHASH = keccak256()(RemoveAddress(address addressToRemove,bytes32 nonce))

IRs:
TMP_87(bytes32) = SOLIDITY_CALL keccak256()(RemoveAddress(address addressToRemove,bytes32 nonce))
REMOVE_ADDRESS_TYPEHASH(bytes32) := TMP_87(bytes32)"];
3->4;
4[label="Node Type: OTHER_ENTRYPOINT 4

EXPRESSION:
PAY_TOKENS_TYPEHASH = keccak256()(PayTokens(address sender,address receiver,uint256 amount,bytes32 nonce))

IRs:
TMP_88(bytes32) = SOLIDITY_CALL keccak256()(PayTokens(address sender,address receiver,uint256 amount,bytes32 nonce))
PAY_TOKENS_TYPEHASH(bytes32) := TMP_88(bytes32)"];
4->5;
5[label="Node Type: OTHER_ENTRYPOINT 5

EXPRESSION:
RELEASE_TOKENS_FOR_TYPEHASH = keccak256()(ReleaseTokensFor(address sender,uint256 amount,bytes32 nonce))

IRs:
TMP_89(bytes32) = SOLIDITY_CALL keccak256()(ReleaseTokensFor(address sender,uint256 amount,bytes32 nonce))
RELEASE_TOKENS_FOR_TYPEHASH(bytes32) := TMP_89(bytes32)"];
5->6;
6[label="Node Type: OTHER_ENTRYPOINT 6

EXPRESSION:
ATTEST_FOR_TYPEHASH = keccak256()(AttestFor(address subject,address requester,uint256 reward,bytes32 dataHash,bytes32 requestNonce))

IRs:
TMP_90(bytes32) = SOLIDITY_CALL keccak256()(AttestFor(address subject,address requester,uint256 reward,bytes32 dataHash,bytes32 requestNonce))
ATTEST_FOR_TYPEHASH(bytes32) := TMP_90(bytes32)"];
6->7;
7[label="Node Type: OTHER_ENTRYPOINT 7

EXPRESSION:
CONTEST_FOR_TYPEHASH = keccak256()(ContestFor(address requester,uint256 reward,bytes32 requestNonce))

IRs:
TMP_91(bytes32) = SOLIDITY_CALL keccak256()(ContestFor(address requester,uint256 reward,bytes32 requestNonce))
CONTEST_FOR_TYPEHASH(bytes32) := TMP_91(bytes32)"];
7->8;
8[label="Node Type: OTHER_ENTRYPOINT 8

EXPRESSION:
REVOKE_ATTESTATION_FOR_TYPEHASH = keccak256()(RevokeAttestationFor(bytes32 link,bytes32 nonce))

IRs:
TMP_92(bytes32) = SOLIDITY_CALL keccak256()(RevokeAttestationFor(bytes32 link,bytes32 nonce))
REVOKE_ATTESTATION_FOR_TYPEHASH(bytes32) := TMP_92(bytes32)"];
8->9;
9[label="Node Type: OTHER_ENTRYPOINT 9

EXPRESSION:
VOTE_FOR_TYPEHASH = keccak256()(VoteFor(uint16 choice,address voter,bytes32 nonce,address poll))

IRs:
TMP_93(bytes32) = SOLIDITY_CALL keccak256()(VoteFor(uint16 choice,address voter,bytes32 nonce,address poll))
VOTE_FOR_TYPEHASH(bytes32) := TMP_93(bytes32)"];
9->10;
10[label="Node Type: OTHER_ENTRYPOINT 10

EXPRESSION:
LOCKUP_TOKENS_FOR_TYPEHASH = keccak256()(LockupTokensFor(address sender,uint256 amount,bytes32 nonce))

IRs:
TMP_94(bytes32) = SOLIDITY_CALL keccak256()(LockupTokensFor(address sender,uint256 amount,bytes32 nonce))
LOCKUP_TOKENS_FOR_TYPEHASH(bytes32) := TMP_94(bytes32)"];
}
