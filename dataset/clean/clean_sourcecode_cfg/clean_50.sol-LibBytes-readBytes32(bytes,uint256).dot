digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(b.length >= index + 32,GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED)

IRs:
REF_14 -> LENGTH b
TMP_36(uint256) = index + 32
TMP_37(bool) = REF_14 >= TMP_36
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
index += 32

IRs:
index(uint256) = index + 32"];
2->3;
3[label="Node Type: INLINE ASM 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
result

IRs:
RETURN result"];
}
