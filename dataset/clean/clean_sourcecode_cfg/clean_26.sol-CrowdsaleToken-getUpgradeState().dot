digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
! canUpgrade()

IRs:
TMP_282(bool) = INTERNAL_CALL, CrowdsaleToken.canUpgrade()()
TMP_283 = ! TMP_282 
CONDITION TMP_283"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
UpgradeState.NotAllowed

IRs:
REF_106(UpgradeableToken.UpgradeState) -> UpgradeState.NotAllowed
RETURN REF_106"];
3[label="Node Type: IF 3

EXPRESSION:
address(upgradeAgent) == 0x00

IRs:
TMP_284 = CONVERT upgradeAgent to address
TMP_285(bool) = TMP_284 == 0
CONDITION TMP_285"];
3->4[label="True"];
3->5[label="False"];
4[label="Node Type: RETURN 4

EXPRESSION:
UpgradeState.WaitingForAgent

IRs:
REF_107(UpgradeableToken.UpgradeState) -> UpgradeState.WaitingForAgent
RETURN REF_107"];
5[label="Node Type: IF 5

EXPRESSION:
totalUpgraded == 0

IRs:
TMP_286(bool) = totalUpgraded == 0
CONDITION TMP_286"];
5->6[label="True"];
5->7[label="False"];
6[label="Node Type: RETURN 6

EXPRESSION:
UpgradeState.ReadyToUpgrade

IRs:
REF_108(UpgradeableToken.UpgradeState) -> UpgradeState.ReadyToUpgrade
RETURN REF_108"];
7[label="Node Type: RETURN 7

EXPRESSION:
UpgradeState.Upgrading

IRs:
REF_109(UpgradeableToken.UpgradeState) -> UpgradeState.Upgrading
RETURN REF_109"];
}
