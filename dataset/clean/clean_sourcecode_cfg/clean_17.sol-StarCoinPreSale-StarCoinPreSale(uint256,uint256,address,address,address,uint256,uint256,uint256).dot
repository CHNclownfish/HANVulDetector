digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
hardCap = _hardCapSTAR.mul(1000000000000000000)

IRs:
TMP_224(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_hardCapSTAR', '1000000000000000000'] 
hardCap(uint256) := TMP_224(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
softCap = _softCapSTAR.mul(1000000000000000000)

IRs:
TMP_225(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_softCapSTAR', '1000000000000000000'] 
softCap(uint256) := TMP_225(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
token = StarCoin(_token)

IRs:
TMP_226 = CONVERT _token to StarCoin
token(StarCoin) := TMP_226(StarCoin)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
beneficiary = _beneficiary

IRs:
beneficiary(address) := _beneficiary(address)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
investorWhiteList = InvestorWhiteList(_investorWhiteList)

IRs:
TMP_227 = CONVERT _investorWhiteList to InvestorWhiteList
investorWhiteList(InvestorWhiteList) := TMP_227(InvestorWhiteList)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
startBlock = _startBlock

IRs:
startBlock(uint256) := _startBlock(uint256)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
endBlock = _endBlock

IRs:
endBlock(uint256) := _endBlock(uint256)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
starEthRate = _baseStarEthPrice

IRs:
starEthRate(uint256) := _baseStarEthPrice(uint256)"];
}
