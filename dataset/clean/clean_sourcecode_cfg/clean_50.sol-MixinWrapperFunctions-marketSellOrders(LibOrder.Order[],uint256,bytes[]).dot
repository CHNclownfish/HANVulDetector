digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->16;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
takerAssetData = orders[0].takerAssetData

IRs:
REF_220(LibOrder.Order) -> orders[0]
REF_221(bytes) -> REF_220.takerAssetData
takerAssetData(bytes) := REF_221(bytes)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
ordersLength = orders.length

IRs:
REF_222 -> LENGTH orders
ordersLength(uint256) := REF_222(uint256)"];
2->5;
3[label="Node Type: BEGIN_LOOP 3
"];
3->6;
4[label="Node Type: END_LOOP 4
"];
4->15;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
5->3;
6[label="Node Type: IF_LOOP 6

EXPRESSION:
i != ordersLength

IRs:
TMP_504(bool) = i != ordersLength
CONDITION TMP_504"];
6->7[label="True"];
6->4[label="False"];
7[label="Node Type: EXPRESSION 7

EXPRESSION:
orders[i].takerAssetData = takerAssetData

IRs:
REF_223(LibOrder.Order) -> orders[i]
REF_224(bytes) -> REF_223.takerAssetData
REF_224 (->orders) := takerAssetData(bytes)"];
7->8;
8[label="Node Type: NEW VARIABLE 8

EXPRESSION:
remainingTakerAssetFillAmount = safeSub(takerAssetFillAmount,totalFillResults.takerAssetFilledAmount)

IRs:
REF_225(uint256) -> totalFillResults.takerAssetFilledAmount
TMP_505(uint256) = INTERNAL_CALL, SafeMath.safeSub(uint256,uint256)(takerAssetFillAmount,REF_225)
remainingTakerAssetFillAmount(uint256) := TMP_505(uint256)"];
8->9;
9[label="Node Type: NEW VARIABLE 9

EXPRESSION:
singleFillResults = fillOrderInternal(orders[i],remainingTakerAssetFillAmount,signatures[i])

IRs:
REF_226(LibOrder.Order) -> orders[i]
REF_227(bytes) -> signatures[i]
TMP_506(LibFillResults.FillResults) = INTERNAL_CALL, MExchangeCore.fillOrderInternal(LibOrder.Order,uint256,bytes)(REF_226,remainingTakerAssetFillAmount,REF_227)
singleFillResults(LibFillResults.FillResults) := TMP_506(LibFillResults.FillResults)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
addFillResults(totalFillResults,singleFillResults)

IRs:
INTERNAL_CALL, LibFillResults.addFillResults(LibFillResults.FillResults,LibFillResults.FillResults)(totalFillResults,singleFillResults)"];
10->11;
11[label="Node Type: IF 11

EXPRESSION:
totalFillResults.takerAssetFilledAmount >= takerAssetFillAmount

IRs:
REF_228(uint256) -> totalFillResults.takerAssetFilledAmount
TMP_508(bool) = REF_228 >= takerAssetFillAmount
CONDITION TMP_508"];
11->12[label="True"];
11->13[label="False"];
12[label="Node Type: BREAK 12
"];
12->4;
13[label="Node Type: END_IF 13
"];
13->14;
14[label="Node Type: EXPRESSION 14

EXPRESSION:
i ++

IRs:
TMP_509(uint256) := i(uint256)
i(uint256) = i + 1"];
14->6;
15[label="Node Type: RETURN 15

EXPRESSION:
totalFillResults

IRs:
RETURN totalFillResults"];
16[label="Node Type: EXPRESSION 16

EXPRESSION:
nonReentrant()

IRs:
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()"];
16->1;
}
