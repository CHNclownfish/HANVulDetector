digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
countdownDate = contributors_countdownDate[_contributor]

IRs:
REF_45(uint256) -> contributors_countdownDate[_contributor]
countdownDate(uint256) := REF_45(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
lockedAmt = contributors_locked[_contributor]

IRs:
REF_46(uint256) -> contributors_locked[_contributor]
lockedAmt(uint256) := REF_46(uint256)"];
2->3;
3[label="Node Type: IF 3

EXPRESSION:
now <= countdownDate + (180 * 86400)

IRs:
TMP_68(uint256) = 180 * 86400
TMP_69(uint256) = countdownDate + TMP_68
TMP_70(bool) = now <= TMP_69
CONDITION TMP_70"];
3->4[label="True"];
3->5[label="False"];
4[label="Node Type: RETURN 4

EXPRESSION:
lockedAmt

IRs:
RETURN lockedAmt"];
5[label="Node Type: END_IF 5
"];
5->6;
6[label="Node Type: IF 6

EXPRESSION:
now <= countdownDate + (180 * 172800)

IRs:
TMP_71(uint256) = 180 * 172800
TMP_72(uint256) = countdownDate + TMP_71
TMP_73(bool) = now <= TMP_72
CONDITION TMP_73"];
6->7[label="True"];
6->8[label="False"];
7[label="Node Type: RETURN 7

EXPRESSION:
lockedAmt.mul(7).div(8)

IRs:
TMP_74(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '7'] 
TMP_75(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_74', '8'] 
RETURN TMP_75"];
8[label="Node Type: END_IF 8
"];
8->9;
9[label="Node Type: IF 9

EXPRESSION:
now <= countdownDate + (180 * 259200)

IRs:
TMP_76(uint256) = 180 * 259200
TMP_77(uint256) = countdownDate + TMP_76
TMP_78(bool) = now <= TMP_77
CONDITION TMP_78"];
9->10[label="True"];
9->11[label="False"];
10[label="Node Type: RETURN 10

EXPRESSION:
lockedAmt.mul(6).div(8)

IRs:
TMP_79(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '6'] 
TMP_80(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_79', '8'] 
RETURN TMP_80"];
11[label="Node Type: END_IF 11
"];
11->12;
12[label="Node Type: IF 12

EXPRESSION:
now <= countdownDate + (180 * 345600)

IRs:
TMP_81(uint256) = 180 * 345600
TMP_82(uint256) = countdownDate + TMP_81
TMP_83(bool) = now <= TMP_82
CONDITION TMP_83"];
12->13[label="True"];
12->14[label="False"];
13[label="Node Type: RETURN 13

EXPRESSION:
lockedAmt.mul(5).div(8)

IRs:
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '5'] 
TMP_85(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', '8'] 
RETURN TMP_85"];
14[label="Node Type: END_IF 14
"];
14->15;
15[label="Node Type: IF 15

EXPRESSION:
now <= countdownDate + (180 * 432000)

IRs:
TMP_86(uint256) = 180 * 432000
TMP_87(uint256) = countdownDate + TMP_86
TMP_88(bool) = now <= TMP_87
CONDITION TMP_88"];
15->16[label="True"];
15->17[label="False"];
16[label="Node Type: RETURN 16

EXPRESSION:
lockedAmt.mul(4).div(8)

IRs:
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '4'] 
TMP_90(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_89', '8'] 
RETURN TMP_90"];
17[label="Node Type: END_IF 17
"];
17->18;
18[label="Node Type: IF 18

EXPRESSION:
now <= countdownDate + (180 * 518400)

IRs:
TMP_91(uint256) = 180 * 518400
TMP_92(uint256) = countdownDate + TMP_91
TMP_93(bool) = now <= TMP_92
CONDITION TMP_93"];
18->19[label="True"];
18->20[label="False"];
19[label="Node Type: RETURN 19

EXPRESSION:
lockedAmt.mul(3).div(8)

IRs:
TMP_94(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '3'] 
TMP_95(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_94', '8'] 
RETURN TMP_95"];
20[label="Node Type: END_IF 20
"];
20->21;
21[label="Node Type: IF 21

EXPRESSION:
now <= countdownDate + (180 * 604800)

IRs:
TMP_96(uint256) = 180 * 604800
TMP_97(uint256) = countdownDate + TMP_96
TMP_98(bool) = now <= TMP_97
CONDITION TMP_98"];
21->22[label="True"];
21->23[label="False"];
22[label="Node Type: RETURN 22

EXPRESSION:
lockedAmt.mul(2).div(8)

IRs:
TMP_99(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '2'] 
TMP_100(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_99', '8'] 
RETURN TMP_100"];
23[label="Node Type: END_IF 23
"];
23->24;
24[label="Node Type: IF 24

EXPRESSION:
now <= countdownDate + (180 * 691200)

IRs:
TMP_101(uint256) = 180 * 691200
TMP_102(uint256) = countdownDate + TMP_101
TMP_103(bool) = now <= TMP_102
CONDITION TMP_103"];
24->25[label="True"];
24->26[label="False"];
25[label="Node Type: RETURN 25

EXPRESSION:
lockedAmt.mul(1).div(8)

IRs:
TMP_104(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['lockedAmt', '1'] 
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_104', '8'] 
RETURN TMP_105"];
26[label="Node Type: END_IF 26
"];
26->27;
27[label="Node Type: RETURN 27

EXPRESSION:
0

IRs:
RETURN 0"];
}
