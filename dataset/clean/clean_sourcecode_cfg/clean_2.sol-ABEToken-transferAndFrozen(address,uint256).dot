digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->5;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(! frozenAccount[msg.sender])

IRs:
REF_120(bool) -> frozenAccount[msg.sender]
TMP_145 = ! REF_120 
TMP_146(None) = SOLIDITY_CALL require(bool)(TMP_145)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
Result = transfer(_to,_value)

IRs:
TMP_147(bool) = INTERNAL_CALL, ABEToken.transfer(address,uint256)(_to,_value)
Result(bool) := TMP_147(bool)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
freezeAccount(_to,true)

IRs:
INTERNAL_CALL, ABEToken.freezeAccount(address,bool)(_to,True)"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
Result

IRs:
RETURN Result"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
whenNotPaused()

IRs:
MODIFIER_CALL, Pausable.whenNotPaused()()"];
6->1;
}
