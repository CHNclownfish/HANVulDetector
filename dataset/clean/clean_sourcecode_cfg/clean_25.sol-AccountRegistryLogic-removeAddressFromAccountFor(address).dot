digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
_accountId = registry.accountIdForAddress(_addressToRemove)

IRs:
TMP_69(uint256) = HIGH_LEVEL_CALL, dest:registry(AccountRegistryInterface), function:accountIdForAddress, arguments:['_addressToRemove']  
_accountId(uint256) := TMP_69(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
registry.removeAddressFromAccount(_addressToRemove)

IRs:
HIGH_LEVEL_CALL, dest:registry(AccountRegistryInterface), function:removeAddressFromAccount, arguments:['_addressToRemove']  "];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
AddressRemoved(_accountId,_addressToRemove)

IRs:
Emit AddressRemoved(_accountId._addressToRemove)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyRegistryAdmin()

IRs:
MODIFIER_CALL, AccountRegistryLogic.onlyRegistryAdmin()()"];
4->1;
}
