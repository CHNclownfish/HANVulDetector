digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(b.length > 0,GREATER_THAN_ZERO_LENGTH_REQUIRED)

IRs:
REF_5 -> LENGTH b
TMP_18(bool) = REF_5 > 0
TMP_19(None) = SOLIDITY_CALL require(bool,string)(TMP_18,GREATER_THAN_ZERO_LENGTH_REQUIRED)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
result = b[b.length - 1]

IRs:
REF_6 -> LENGTH b
TMP_20(uint256) = REF_6 - 1
REF_7(None) -> b[TMP_20]
result(bytes1) := REF_7(None)"];
2->3;
3[label="Node Type: INLINE ASM 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
result

IRs:
RETURN result"];
}
