digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value)

IRs:
REF_44(mapping(address => uint256)) -> allowance[_from]
REF_45(uint256) -> REF_44[msg.sender]
REF_46(mapping(address => uint256)) -> allowance[_from]
REF_47(uint256) -> REF_46[msg.sender]
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_47', '_value'] 
REF_45 (->allowance) := TMP_86(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_transfer(_from,_to,_value)

IRs:
INTERNAL_CALL, TokenERC20._transfer(address,address,uint256)(_from,_to,_value)"];
2->3;
3[label="Node Type: RETURN 3

EXPRESSION:
true

IRs:
RETURN True"];
}
