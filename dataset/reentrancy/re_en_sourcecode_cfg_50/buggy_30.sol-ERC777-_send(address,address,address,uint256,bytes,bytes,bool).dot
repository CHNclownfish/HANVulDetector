digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(from != address(0),ERC777: send from the zero address)

IRs:
TMP_114 = CONVERT 0 to address
TMP_115(bool) = from != TMP_114
TMP_116(None) = SOLIDITY_CALL require(bool,string)(TMP_115,ERC777: send from the zero address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(to != address(0),ERC777: send to the zero address)

IRs:
TMP_117 = CONVERT 0 to address
TMP_118(bool) = to != TMP_117
TMP_119(None) = SOLIDITY_CALL require(bool,string)(TMP_118,ERC777: send to the zero address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_callTokensToSend(operator,from,to,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
_move(operator,from,to,amount,userData,operatorData)

IRs:
INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(operator,from,to,amount,userData,operatorData)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
_callTokensReceived(operator,from,to,amount,userData,operatorData,requireReceptionAck)

IRs:
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(operator,from,to,amount,userData,operatorData,requireReceptionAck)"];
}
