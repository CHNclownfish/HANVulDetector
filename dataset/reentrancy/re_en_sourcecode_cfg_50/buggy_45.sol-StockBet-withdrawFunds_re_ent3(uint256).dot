digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(balances_re_ent3[msg.sender] >= _weiToWithdraw)

IRs:
REF_36(uint256) -> balances_re_ent3[msg.sender]
TMP_49(bool) = REF_36 >= _weiToWithdraw
TMP_50(None) = SOLIDITY_CALL require(bool)(TMP_49)"];
1->2;
2[label="Node Type: NEW VARIABLE 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
(success) = msg.sender.call.value(_weiToWithdraw)()

IRs:
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_weiToWithdraw 
success(bool)= UNPACK TUPLE_5 index: 0 "];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool)(success)

IRs:
TMP_52(None) = SOLIDITY_CALL require(bool)(success)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
balances_re_ent3[msg.sender] -= _weiToWithdraw

IRs:
REF_39(uint256) -> balances_re_ent3[msg.sender]
REF_39(-> balances_re_ent3) = REF_39 - _weiToWithdraw"];
}
