digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(spender != address(0),ERC777: approve to the zero address)

IRs:
TMP_144 = CONVERT 0 to address
TMP_145(bool) = spender != TMP_144
TMP_146(None) = SOLIDITY_CALL require(bool,string)(TMP_145,ERC777: approve to the zero address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_allowances[holder][spender] = value

IRs:
REF_80(mapping(address => uint256)) -> _allowances[holder]
REF_81(uint256) -> REF_80[spender]
REF_81 (->_allowances) := value(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Approval(holder,spender,value)

IRs:
Emit Approval(holder.spender.value)"];
}
