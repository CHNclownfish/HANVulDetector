digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(not_called_re_ent13)

IRs:
TMP_266(None) = SOLIDITY_CALL require(bool)(not_called_re_ent13)"];
1->2;
2[label="Node Type: NEW VARIABLE 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
(success) = msg.sender.call.value(1000000000000000000)()

IRs:
TUPLE_14(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:1000000000000000000 
success(bool)= UNPACK TUPLE_14 index: 0 "];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
! success

IRs:
TMP_268 = ! success 
CONDITION TMP_268"];
4->5[label="True"];
4->6[label="False"];
5[label="Node Type: EXPRESSION 5

EXPRESSION:
revert()()

IRs:
TMP_269(None) = SOLIDITY_CALL revert()()"];
5->6;
6[label="Node Type: END_IF 6
"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
not_called_re_ent13 = false

IRs:
not_called_re_ent13(bool) := False(bool)"];
}
