digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
counter_re_ent21 = 0

IRs:
counter_re_ent21(uint256) := 0(uint256)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
counter_re_ent35 = 0

IRs:
counter_re_ent35(uint256) := 0(uint256)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
not_called_re_ent41 = true

IRs:
not_called_re_ent41(bool) := True(bool)"];
2->3;
3[label="Node Type: OTHER_ENTRYPOINT 3

EXPRESSION:
counter_re_ent42 = 0

IRs:
counter_re_ent42(uint256) := 0(uint256)"];
3->4;
4[label="Node Type: OTHER_ENTRYPOINT 4

EXPRESSION:
not_called_re_ent6 = true

IRs:
not_called_re_ent6(bool) := True(bool)"];
4->5;
5[label="Node Type: OTHER_ENTRYPOINT 5

EXPRESSION:
name = Exclusive Platform

IRs:
name(string) := Exclusive Platform(string)"];
5->6;
6[label="Node Type: OTHER_ENTRYPOINT 6

EXPRESSION:
symbol = XPL

IRs:
symbol(string) := XPL(string)"];
6->7;
7[label="Node Type: OTHER_ENTRYPOINT 7

EXPRESSION:
decimals = 8

IRs:
decimals(uint256) := 8(uint256)"];
7->8;
8[label="Node Type: OTHER_ENTRYPOINT 8

EXPRESSION:
counter_re_ent28 = 0

IRs:
counter_re_ent28(uint256) := 0(uint256)"];
8->9;
9[label="Node Type: OTHER_ENTRYPOINT 9

EXPRESSION:
XPLPerEther = 8000000e8

IRs:
XPLPerEther(uint256) := 800000000000000(uint256)"];
9->10;
10[label="Node Type: OTHER_ENTRYPOINT 10

EXPRESSION:
minimumBuy = 1000000000000000000 / 100

IRs:
TMP_286(uint256) = 1000000000000000000 / 100
minimumBuy(uint256) := TMP_286(uint256)"];
10->11;
11[label="Node Type: OTHER_ENTRYPOINT 11

EXPRESSION:
not_called_re_ent34 = true

IRs:
not_called_re_ent34(bool) := True(bool)"];
11->12;
12[label="Node Type: OTHER_ENTRYPOINT 12

EXPRESSION:
crowdsaleIsOn = true

IRs:
crowdsaleIsOn(bool) := True(bool)"];
12->13;
13[label="Node Type: OTHER_ENTRYPOINT 13

EXPRESSION:
not_called_re_ent20 = true

IRs:
not_called_re_ent20(bool) := True(bool)"];
13->14;
14[label="Node Type: OTHER_ENTRYPOINT 14

EXPRESSION:
counter_re_ent7 = 0

IRs:
counter_re_ent7(uint256) := 0(uint256)"];
14->15;
15[label="Node Type: OTHER_ENTRYPOINT 15

EXPRESSION:
counter_re_ent14 = 0

IRs:
counter_re_ent14(uint256) := 0(uint256)"];
15->16;
16[label="Node Type: OTHER_ENTRYPOINT 16

EXPRESSION:
not_called_re_ent27 = true

IRs:
not_called_re_ent27(bool) := True(bool)"];
16->17;
17[label="Node Type: OTHER_ENTRYPOINT 17

EXPRESSION:
not_called_re_ent13 = true

IRs:
not_called_re_ent13(bool) := True(bool)"];
}
