digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(spender != address(0))

IRs:
TMP_103 = CONVERT 0 to address
TMP_104(bool) = spender != TMP_103
TMP_105(None) = SOLIDITY_CALL require(bool)(TMP_104)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(owner != address(0))

IRs:
TMP_106 = CONVERT 0 to address
TMP_107(bool) = owner != TMP_106
TMP_108(None) = SOLIDITY_CALL require(bool)(TMP_107)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_allowed[owner][spender] = value

IRs:
REF_28(mapping(address => uint256)) -> _allowed[owner]
REF_29(uint256) -> REF_28[spender]
REF_29 (->_allowed) := value(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
Approval(owner,spender,value)

IRs:
Emit Approval(owner.spender.value)"];
}
