digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
Order[orderid].status == 1

IRs:
REF_363(StableDEX.orders) -> Order[orderid]
REF_364(uint256) -> REF_363.status
TMP_278(bool) = REF_364 == 1
CONDITION TMP_278"];
1->2[label="True"];
1->7[label="False"];
2[label="Node Type: IF 2

EXPRESSION:
Order[orderid].type_ == 0

IRs:
REF_365(StableDEX.orders) -> Order[orderid]
REF_366(uint256) -> REF_365.type_
TMP_279(bool) = REF_366 == 0
CONDITION TMP_279"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress] = userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress].add(Order[orderid].tradeTotal)

IRs:
REF_367(StableDEX.orders) -> Order[orderid]
REF_368(address) -> REF_367.userAddress
REF_369(mapping(address => uint256)) -> userDetails[REF_368]
REF_370(StableDEX.orders) -> Order[orderid]
REF_371(address) -> REF_370.tokenAddress
REF_372(uint256) -> REF_369[REF_371]
REF_373(StableDEX.orders) -> Order[orderid]
REF_374(address) -> REF_373.userAddress
REF_375(mapping(address => uint256)) -> userDetails[REF_374]
REF_376(StableDEX.orders) -> Order[orderid]
REF_377(address) -> REF_376.tokenAddress
REF_378(uint256) -> REF_375[REF_377]
REF_380(StableDEX.orders) -> Order[orderid]
REF_381(uint256) -> REF_380.tradeTotal
TMP_280(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_378', 'REF_381'] 
REF_372 (->userDetails) := TMP_280(uint256)"];
3->5;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress] = userDetails[Order[orderid].userAddress][Order[orderid].tokenAddress].add(Order[orderid].tradeAmount)

IRs:
REF_382(StableDEX.orders) -> Order[orderid]
REF_383(address) -> REF_382.userAddress
REF_384(mapping(address => uint256)) -> userDetails[REF_383]
REF_385(StableDEX.orders) -> Order[orderid]
REF_386(address) -> REF_385.tokenAddress
REF_387(uint256) -> REF_384[REF_386]
REF_388(StableDEX.orders) -> Order[orderid]
REF_389(address) -> REF_388.userAddress
REF_390(mapping(address => uint256)) -> userDetails[REF_389]
REF_391(StableDEX.orders) -> Order[orderid]
REF_392(address) -> REF_391.tokenAddress
REF_393(uint256) -> REF_390[REF_392]
REF_395(StableDEX.orders) -> Order[orderid]
REF_396(uint256) -> REF_395.tradeAmount
TMP_281(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_393', 'REF_396'] 
REF_387 (->userDetails) := TMP_281(uint256)"];
4->5;
5[label="Node Type: END_IF 5
"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
Order[orderid].status = 3

IRs:
REF_397(StableDEX.orders) -> Order[orderid]
REF_398(uint256) -> REF_397.status
REF_398 (->Order) := 3(uint256)"];
6->7;
7[label="Node Type: END_IF 7
"];
7->8;
8[label="Node Type: RETURN 8

EXPRESSION:
true

IRs:
RETURN True"];
}
