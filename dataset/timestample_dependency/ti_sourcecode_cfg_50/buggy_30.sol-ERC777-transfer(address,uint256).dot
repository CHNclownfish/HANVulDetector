digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(recipient != address(0),ERC777: transfer to the zero address)

IRs:
TMP_36 = CONVERT 0 to address
TMP_37(bool) = recipient != TMP_36
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,ERC777: transfer to the zero address)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
from = msg.sender

IRs:
from(address) := msg.sender(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_callTokensToSend(from,from,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._callTokensToSend(address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
_move(from,from,recipient,amount,,)

IRs:
INTERNAL_CALL, ERC777._move(address,address,address,uint256,bytes,bytes)(from,from,recipient,amount,,)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
_callTokensReceived(from,from,recipient,amount,,,false)

IRs:
INTERNAL_CALL, ERC777._callTokensReceived(address,address,address,uint256,bytes,bytes,bool)(from,from,recipient,amount,,,False)"];
5->6;
6[label="Node Type: RETURN 6

EXPRESSION:
true

IRs:
RETURN True"];
}
