digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
tokens[address(0)][msg.sender] = tokens[address(0)][msg.sender].add(msg.value)

IRs:
TMP_132 = CONVERT 0 to address
REF_17(mapping(address => uint256)) -> tokens[TMP_132]
REF_18(uint256) -> REF_17[msg.sender]
TMP_133 = CONVERT 0 to address
REF_19(mapping(address => uint256)) -> tokens[TMP_133]
REF_20(uint256) -> REF_19[msg.sender]
TMP_134(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_20', 'msg.value'] 
REF_18 (->tokens) := TMP_134(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
Deposit(now,address(0),msg.sender,msg.value,tokens[address(0)][msg.sender])

IRs:
TMP_135 = CONVERT 0 to address
TMP_136 = CONVERT 0 to address
REF_22(mapping(address => uint256)) -> tokens[TMP_136]
REF_23(uint256) -> REF_22[msg.sender]
Emit Deposit(now.TMP_135.msg.sender.msg.value.REF_23)"];
}
