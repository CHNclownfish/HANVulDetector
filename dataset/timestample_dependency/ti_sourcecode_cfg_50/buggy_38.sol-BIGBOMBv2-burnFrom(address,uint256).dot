digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(amount <= _allowed[account][msg.sender])

IRs:
REF_72(mapping(address => uint256)) -> _allowed[account]
REF_73(uint256) -> REF_72[msg.sender]
TMP_193(bool) = amount <= REF_73
TMP_194(None) = SOLIDITY_CALL require(bool)(TMP_193)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount)

IRs:
REF_74(mapping(address => uint256)) -> _allowed[account]
REF_75(uint256) -> REF_74[msg.sender]
REF_76(mapping(address => uint256)) -> _allowed[account]
REF_77(uint256) -> REF_76[msg.sender]
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_77', 'amount'] 
REF_75 (->_allowed) := TMP_195(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_burn(account,amount)

IRs:
INTERNAL_CALL, BIGBOMBv2._burn(address,uint256)(account,amount)"];
}
