digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(hasActiveOperator(),only when operator active)

IRs:
TMP_18(bool) = INTERNAL_CALL, Operated.hasActiveOperator()()
TMP_19(None) = SOLIDITY_CALL require(bool,string)(TMP_18,only when operator active)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_operator = address(0)

IRs:
TMP_20 = CONVERT 0 to address
_operator(address) := TMP_20(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_status = false

IRs:
_status(bool) := False(bool)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
OperatorUpdated(address(0),false)

IRs:
TMP_21 = CONVERT 0 to address
Emit OperatorUpdated(TMP_21.False)"];
}
