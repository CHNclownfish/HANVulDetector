digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(bytes(channelId).length > 0)

IRs:
TMP_233 = CONVERT channelId to bytes
REF_28 -> LENGTH TMP_233
TMP_234(bool) = REF_28 > 0
TMP_235(None) = SOLIDITY_CALL require(bool)(TMP_234)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
addressMap[channelId] = address(0)

IRs:
REF_29(address) -> addressMap[channelId]
TMP_236 = CONVERT 0 to address
REF_29 (->addressMap) := TMP_236(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
DeleteAddress(channelId)

IRs:
Emit DeleteAddress(channelId)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyMaster()

IRs:
MODIFIER_CALL, Ownable.onlyMaster()()"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
onlyWhenNotStopped()

IRs:
MODIFIER_CALL, Ownable.onlyWhenNotStopped()()"];
5->1;
}
