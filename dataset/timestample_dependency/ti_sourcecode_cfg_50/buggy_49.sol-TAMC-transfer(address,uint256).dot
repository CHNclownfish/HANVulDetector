digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(balanceOf[msg.sender] >= value)

IRs:
REF_3(uint256) -> balanceOf[msg.sender]
TMP_18(bool) = REF_3 >= value
TMP_19(None) = SOLIDITY_CALL require(bool)(TMP_18)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
balanceOf[msg.sender] -= value

IRs:
REF_4(uint256) -> balanceOf[msg.sender]
REF_4(-> balanceOf) = REF_4 - value"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
balanceOf[to] += value

IRs:
REF_5(uint256) -> balanceOf[to]
REF_5(-> balanceOf) = REF_5 + value"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
Transfer(msg.sender,to,value)

IRs:
Emit Transfer(msg.sender.to.value)"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
true

IRs:
RETURN True"];
}
