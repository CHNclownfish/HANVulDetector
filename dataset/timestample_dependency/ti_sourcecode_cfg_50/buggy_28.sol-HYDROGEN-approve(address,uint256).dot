digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(spender != address(0))

IRs:
TMP_142 = CONVERT 0 to address
TMP_143(bool) = spender != TMP_142
TMP_144(None) = SOLIDITY_CALL require(bool)(TMP_143)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_allowed[msg.sender][spender] = value

IRs:
REF_32(mapping(address => uint256)) -> _allowed[msg.sender]
REF_33(uint256) -> REF_32[spender]
REF_33 (->_allowed) := value(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Approval(msg.sender,spender,value)

IRs:
Emit Approval(msg.sender.spender.value)"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
true

IRs:
RETURN True"];
}
