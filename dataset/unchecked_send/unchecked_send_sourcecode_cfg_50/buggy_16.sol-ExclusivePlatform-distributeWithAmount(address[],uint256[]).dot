digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(_addresses.length == _amounts.length)

IRs:
REF_37 -> LENGTH _addresses
REF_38 -> LENGTH _amounts
TMP_79(bool) = REF_37 == REF_38
TMP_80(None) = SOLIDITY_CALL require(bool)(TMP_79)"];
1->4;
2[label="Node Type: BEGIN_LOOP 2
"];
2->5;
3[label="Node Type: END_LOOP 3
"];
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
4->2;
5[label="Node Type: IF_LOOP 5

EXPRESSION:
i < _addresses.length

IRs:
REF_39 -> LENGTH _addresses
TMP_81(bool) = i < REF_39
CONDITION TMP_81"];
5->6[label="True"];
5->3[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
transfer(_addresses[i],_amounts[i])

IRs:
REF_40(address) -> _addresses[i]
REF_41(uint256) -> _amounts[i]
TMP_82(bool) = INTERNAL_CALL, ExclusivePlatform.transfer(address,uint256)(REF_40,REF_41)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
i ++

IRs:
TMP_83(uint256) := i(uint256)
i(uint256) = i + 1"];
7->5;
}
