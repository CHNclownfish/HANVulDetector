digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
user = userMapping[msg.sender]

IRs:
REF_131(FomoFeast.User) -> userMapping[msg.sender]
user(FomoFeast.User) := REF_131(FomoFeast.User)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
avaliableDCB = user.dynamicCommissionBalance

IRs:
REF_132(uint256) -> user.dynamicCommissionBalance
avaliableDCB(uint256) := REF_132(uint256)"];
2->3;
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
avaliableSCA = getAvaliableStaticCommissionAmount(user)

IRs:
TMP_167(uint256) = INTERNAL_CALL, FomoFeast.getAvaliableStaticCommissionAmount(FomoFeast.User)(user)
avaliableSCA(uint256) := TMP_167(uint256)"];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
avaliableSCB = user.staticCommissionBalance.add(avaliableSCA)

IRs:
REF_133(uint256) -> user.staticCommissionBalance
TMP_168(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_133', 'avaliableSCA'] 
avaliableSCB(uint256) := TMP_168(uint256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
avaliableWithdrawAmount = avaliableDCB.add(avaliableSCB)

IRs:
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['avaliableDCB', 'avaliableSCB'] 
avaliableWithdrawAmount(uint256) := TMP_169(uint256)"];
5->6;
6[label="Node Type: IF 6

EXPRESSION:
avaliableWithdrawAmount >= ONE_ETH.div(10)

IRs:
TMP_170(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['ONE_ETH', '10'] 
TMP_171(bool) = avaliableWithdrawAmount >= TMP_170
CONDITION TMP_171"];
6->7[label="True"];
6->20[label="False"];
7[label="Node Type: EXPRESSION 7

EXPRESSION:
user.staticCommissionBalance = 0

IRs:
REF_137(uint256) -> user.staticCommissionBalance
REF_137 (->user) := 0(uint256)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
user.dynamicCommissionBalance = 0

IRs:
REF_138(uint256) -> user.dynamicCommissionBalance
REF_138 (->user) := 0(uint256)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
user.currentStaticCommissionWithdrawAmount = user.currentStaticCommissionWithdrawAmount.add(avaliableSCA)

IRs:
REF_139(uint256) -> user.currentStaticCommissionWithdrawAmount
REF_140(uint256) -> user.currentStaticCommissionWithdrawAmount
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_140', 'avaliableSCA'] 
REF_139 (->user) := TMP_172(uint256)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
user.totalStaticCommissionWithdrawAmount = user.totalStaticCommissionWithdrawAmount.add(avaliableSCB)

IRs:
REF_142(uint256) -> user.totalStaticCommissionWithdrawAmount
REF_143(uint256) -> user.totalStaticCommissionWithdrawAmount
TMP_173(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_143', 'avaliableSCB'] 
REF_142 (->user) := TMP_173(uint256)"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
user.totalDynamicCommissionWithdrawAmount = user.totalDynamicCommissionWithdrawAmount.add(avaliableDCB)

IRs:
REF_145(uint256) -> user.totalDynamicCommissionWithdrawAmount
REF_146(uint256) -> user.totalDynamicCommissionWithdrawAmount
TMP_174(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_146', 'avaliableDCB'] 
REF_145 (->user) := TMP_174(uint256)"];
11->12;
12[label="Node Type: EXPRESSION 12

EXPRESSION:
user.totalWithdrawAmount = user.totalWithdrawAmount.add(avaliableWithdrawAmount)

IRs:
REF_148(uint256) -> user.totalWithdrawAmount
REF_149(uint256) -> user.totalWithdrawAmount
TMP_175(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_149', 'avaliableWithdrawAmount'] 
REF_148 (->user) := TMP_175(uint256)"];
12->13;
13[label="Node Type: EXPRESSION 13

EXPRESSION:
totalStaticCommissionWithdrawAmount = totalStaticCommissionWithdrawAmount.add(avaliableSCB)

IRs:
TMP_176(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalStaticCommissionWithdrawAmount', 'avaliableSCB'] 
totalStaticCommissionWithdrawAmount(uint256) := TMP_176(uint256)"];
13->14;
14[label="Node Type: EXPRESSION 14

EXPRESSION:
totalDynamicCommissionWithdrawAmount = totalDynamicCommissionWithdrawAmount.add(avaliableDCB)

IRs:
TMP_177(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalDynamicCommissionWithdrawAmount', 'avaliableDCB'] 
totalDynamicCommissionWithdrawAmount(uint256) := TMP_177(uint256)"];
14->15;
15[label="Node Type: EXPRESSION 15

EXPRESSION:
totalWithdrawAmount = totalWithdrawAmount.add(avaliableWithdrawAmount)

IRs:
TMP_178(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['totalWithdrawAmount', 'avaliableWithdrawAmount'] 
totalWithdrawAmount(uint256) := TMP_178(uint256)"];
15->16;
16[label="Node Type: IF 16

EXPRESSION:
avaliableSCB > 0

IRs:
TMP_179(bool) = avaliableSCB > 0
CONDITION TMP_179"];
16->17[label="True"];
16->18[label="False"];
17[label="Node Type: EXPRESSION 17

EXPRESSION:
addStaticCommissionRecord(msg.sender,now,avaliableSCB)

IRs:
INTERNAL_CALL, FomoFeast.addStaticCommissionRecord(address,uint256,uint256)(msg.sender,now,avaliableSCB)"];
17->18;
18[label="Node Type: END_IF 18
"];
18->19;
19[label="Node Type: EXPRESSION 19

EXPRESSION:
msg.sender.transfer(avaliableWithdrawAmount)

IRs:
Transfer dest:msg.sender value:avaliableWithdrawAmount"];
19->20;
20[label="Node Type: END_IF 20
"];
}
