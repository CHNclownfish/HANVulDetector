digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(_amount > 0 && _amount <= address(this).balance)

IRs:
TMP_119(bool) = _amount > 0
TMP_120 = CONVERT this to address
REF_112 -> BALANCE TMP_120
TMP_121(bool) = _amount <= REF_112
TMP_122(bool) = TMP_119 && TMP_121
TMP_123(None) = SOLIDITY_CALL require(bool)(TMP_122)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
owner.transfer(_amount)

IRs:
Transfer dest:owner value:_amount"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Withdraw(owner,_amount)

IRs:
Emit Withdraw(owner._amount)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, WhiteBetting.onlyOwner()()"];
4->1;
}
