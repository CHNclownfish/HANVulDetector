digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
totalDays = timeElasped.div(minAgeOfToken)

IRs:
TMP_39(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['timeElasped', 'minAgeOfToken'] 
totalDays(uint256) := TMP_39(uint256)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
totalDays > maxAgeOfToken

IRs:
TMP_40(bool) = totalDays > maxAgeOfToken
CONDITION TMP_40"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
totalDays = maxAgeOfToken

IRs:
totalDays(uint256) := maxAgeOfToken(uint256)"];
3->4;
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
totalBonus = (totalDays * amount).div(perDayBonus)

IRs:
TMP_41(uint256) = totalDays * amount
TMP_42(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_41', 'perDayBonus'] 
totalBonus(uint256) := TMP_42(uint256)"];
5->6;
6[label="Node Type: RETURN 6

EXPRESSION:
totalBonus

IRs:
RETURN totalBonus"];
}
