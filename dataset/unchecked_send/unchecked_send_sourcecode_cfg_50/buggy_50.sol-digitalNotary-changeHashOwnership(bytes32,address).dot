digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(contractactive == true)

IRs:
TMP_56(bool) = contractactive == True
TMP_57(None) = SOLIDITY_CALL require(bool)(TMP_56)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
owncount = getHashOwnersCount(hash)

IRs:
TMP_58(uint256) = INTERNAL_CALL, digitalNotary.getHashOwnersCount(bytes32)(hash)
owncount(uint256) := TMP_58(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(owncount > 0)

IRs:
TMP_59(bool) = owncount > 0
TMP_60(None) = SOLIDITY_CALL require(bool)(TMP_59)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool)(msg.sender == HashList[hash][owncount - 1].owner)

IRs:
REF_43(digitalNotary.HashRegistration[]) -> HashList[hash]
TMP_61(uint256) = owncount - 1
REF_44(digitalNotary.HashRegistration) -> REF_43[TMP_61]
REF_45(address) -> REF_44.owner
TMP_62(bool) = msg.sender == REF_45
TMP_63(None) = SOLIDITY_CALL require(bool)(TMP_62)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
require(bool)(msg.value == changehashownerfee)

IRs:
TMP_64(bool) = msg.value == changehashownerfee
TMP_65(None) = SOLIDITY_CALL require(bool)(TMP_64)"];
5->6;
6[label="Node Type: NEW VARIABLE 6
"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
thisregistration.owner = newowner

IRs:
REF_46(address) -> thisregistration.owner
REF_46 (->thisregistration) := newowner(address)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
thisregistration.registrationtime = now

IRs:
REF_47(uint256) -> thisregistration.registrationtime
REF_47 (->thisregistration) := now(uint256)"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
HashList[hash].push(thisregistration)

IRs:
REF_48(digitalNotary.HashRegistration[]) -> HashList[hash]
REF_50 -> LENGTH REF_48
TMP_67(uint256) := REF_50(uint256)
TMP_68(uint256) = TMP_67 + 1
REF_50 (->HashList) := TMP_68(uint256)
REF_51(digitalNotary.HashRegistration) -> REF_48[TMP_67]
REF_51 (->HashList) := thisregistration(digitalNotary.HashRegistration)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
ChangeHashOwnershipEvent(msg.sender,thisregistration.owner,hash,thisregistration.registrationtime)

IRs:
REF_52(address) -> thisregistration.owner
REF_53(uint256) -> thisregistration.registrationtime
Emit ChangeHashOwnershipEvent(msg.sender.REF_52.hash.REF_53)"];
}
