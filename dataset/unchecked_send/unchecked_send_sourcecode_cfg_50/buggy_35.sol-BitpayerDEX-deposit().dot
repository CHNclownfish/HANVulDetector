digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
tokens[address(0)][msg.sender] = tokens[address(0)][msg.sender].add(msg.value)

IRs:
TMP_72 = CONVERT 0 to address
REF_34(mapping(address => uint256)) -> tokens[TMP_72]
REF_35(uint256) -> REF_34[msg.sender]
TMP_73 = CONVERT 0 to address
REF_36(mapping(address => uint256)) -> tokens[TMP_73]
REF_37(uint256) -> REF_36[msg.sender]
TMP_74(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_37', 'msg.value'] 
REF_35 (->tokens) := TMP_74(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
Deposit(now,address(0),msg.sender,msg.value,tokens[address(0)][msg.sender])

IRs:
TMP_75 = CONVERT 0 to address
TMP_76 = CONVERT 0 to address
REF_39(mapping(address => uint256)) -> tokens[TMP_76]
REF_40(uint256) -> REF_39[msg.sender]
Emit Deposit(now.TMP_75.msg.sender.msg.value.REF_40)"];
}
